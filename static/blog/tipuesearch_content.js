var tipuesearch = {"pages":[{"tags":"bg1","text":"啟動 cdw16 協同專案 3D 正齒輪傳動模擬 步驟: 1.建立零件 2.輸入尺寸,要注意每個齒輪的模術與壓力角一樣 3.組立,要將板子固定以免齒輪轉動時會亂動 心得: 這次onshape的操作上與其他的繪圖軟體差異不大,只要熟悉之後在繪圖上就比較容易, 在這次操作上雖然沒有用到許多功能,但使用了feature studio功能,可以清楚了解它的便利。","title":"40123133 3D 正齒輪傳動模擬 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123133-3d-zheng-chi-lun-chuan-dong-mo-ni-bao-gao.html"},{"tags":"bg6","text":"cdw14 網際 3D 正齒輪傳動模擬 ，利用Onshape 的正齒輪設計繪圖與組立, 3D 正齒輪傳動組立過程, 只有 Spur Gear 功能採用 Featurescript 編寫 設定外框 及軸套 設定參數 齒輪接合","title":"40323248 cdw14報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323248-cdw14bao-gao.html"},{"tags":"bg6","text":"cdw13 執行網際 2D 正齒輪傳動協同繪圖,建置在個人的網頁空間中, 以下為 15 齒輪組的囓合繪圖,","title":"40323248 cdw13報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323248-cdw13bao-gao.html"},{"tags":"bg6","text":"cdw11 計算鏈條傳動對應的兩個節圓, 所產生的 8 個相切點座標, 兩個圓均位於同軸上, 左側小齒盤 18 齒, 而右側大齒盤 30 齒,將兩條外切線與兩條內切線所對應的 8 個切點座標與左側圓之圓心座標，再利用 Solvespace 標示出符合兩圓相切線的內切線, 與對應左側圓心位置，我覺得最難的部分是利用Solvespace計算出座標位置，只要沒有配合好鏈條位置，鏈條就會整個錯位。一開始覺得非常複雜，但是後來再經過同學的教導下，慢慢學到許多步驟及方法後來就越來越得心應手如何去做。","title":"40323248 cdw11報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323248-cdw11bao-gao.html"},{"tags":"bg15","text":"cdw11內容規畫 :","title":"40323247 cdw15報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323247-cdw15bao-gao.html"},{"tags":"bg13","text":"cdw11內容規畫 :","title":"40323247 cdw13報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323247-cdw13bao-gao.html"},{"tags":"bg11","text":"cdw11內容規畫 :","title":"40323247 cdw11報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323247-cdw11bao-gao.html"},{"tags":"bg11","text":"<<<<<<< HEAD cdw17 內容規畫 : ======= cdw13 內容規畫 : 0938d723a107da0d6a466fc5434d508514303891","title":"40323245 cdw17報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323245-cdw17bao-gao.html"},{"tags":"bg11","text":"cdw15 內容規畫 : 參考老師上課網址 http://chiamingyen.github.io/kmolab/blog/wang-ji-2d-zheng-chi-lun-chuan-dong-nie-he-hui-tu.html 以下為 17 齒, 29 齒與 15 齒輪組的囓合繪圖: 此週課程，可透過老師提供之程式進行修改，畫出不同齒數之齒輪。 以下將設計出一10、12、14、16齒之齒輪。 在此新增一n4齒輪，並可設定齒輪齒數。 並在此完成齒心座標設定。 完成所有設定後，即可畫出設計之齒輪組。 心得 本週作業為將老師提供之3齒輪組增加1齒輪 ，成為4齒輪組\u0004。相較於齒距的設定，齒輪的齒數、齒輪的節圓半徑設定是比較簡單的，齒數方面，只要新增一個n4 = X，X可以自由變更大小，半徑方面，只要新增一個pr4 = n4*m/2即可，齒距定位方面，就比較不懂了，所以一直跑去問同學，搞了老半天...，最後照著老師程式裡的提示，一步步慢慢的研究，最後還是完成了本週的作業。","title":"40323245 cdw15報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323245-cdw15bao-gao.html"},{"tags":"bg10","text":"cdw11內容規畫 : 網際 2D 正齒輪傳動囓合繪圖 心得 自行車傳動鏈條經由solvespace的分析，藉由得到的數值再來畫出，然後三個正齒輪則更改為可調式參數。","title":"40328242-threegears 網際 2D 正齒輪傳動囓合繪圖報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40328242-threegears-wang-ji-2d-zheng-chi-lun-chuan-dong-nie-he-hui-tu-bao-gao.html"},{"tags":"bg10","text":"cdw11內容規畫 : 自行車傳動 2D 鏈條繪圖 (二) 心得 自行車傳動鏈條經由solvespace的分析，藉由得到的數值再來畫出，然後三個正齒輪則更改為可調式參數。","title":"40328242-eighteenthirty 自行車傳動 2D 鏈條繪圖 (二)報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40328242-eighteenthirty-zi-xing-che-chuan-dong-2d-lian-tiao-hui-tu-er-bao-gao.html"},{"tags":"bg10","text":"cdw11內容規畫 : 心得 自行車傳動鏈條經由solvespace的分析，藉由得到的數值再來畫出，然後三個正齒輪則更改為可調式參數。 自評分數 70分","title":"40328242-cdw11 期末報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40328242-cdw11-qi-mo-bao-gao.html"},{"tags":"bg10","text":"啟動 cdw11 協同專案 心得:這學期的協同很注重團隊的合作 每一位隊員都要把自己的事情做好才不會拖累團度的進度","title":"40323241-cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323241-cdw11-bao-gao.html"},{"tags":"bg10","text":"cdw11內容規畫 : 網際 2D 正齒輪傳動囓合繪圖 心得 操作後了解到齒輪嚙合需要許多條件來拘束，且齒輪大小.齒數也不能隨便配。 自評分數 60分","title":"40323222-threegears 網際 2D 正齒輪傳動囓合繪圖報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323222-threegears-wang-ji-2d-zheng-chi-lun-chuan-dong-nie-he-hui-tu-bao-gao.html"},{"tags":"bg10","text":"cdw11內容規畫 : 自行車傳動 2D 鏈條繪圖 (二) 心得 經過精密的計算與微妙的程式設計，引導出此單元。其中較困難的地方是鏈與鏈之間的接合，常碰到角度或距離的誤差，導致無法同心。 自評分數 60分","title":"40323222-eighteenthirty 自行車傳動 2D 鏈條繪圖 (二)報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323222-eighteenthirty-zi-xing-che-chuan-dong-2d-lian-tiao-hui-tu-er-bao-gao.html"},{"tags":"bg10","text":"cdw11內容規畫 : 心得 雖然是程式課程，新的接觸，但裡頭卻包含許多知識，像高職教的機件原理內容也都再次出現了，環環相扣。 「數學的重要性」老師上課常強調的，在上課裡都印證到了，不管是鏈條角度或是齒輪模數.壓力角等等。 自評分數 60分","title":"40323222-cdw11 期末報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323222-cdw11-qi-mo-bao-gao.html"},{"tags":"bg1","text":"創造新圖檔，並點擊 Create Feature Studio 。 將老師的程式碼貼到 Feature Studio 1 後按下commit 提交。 最後在 Assembly 1 就會顯示組合圖了。 心得：過去使用的繪圖軟體是 SolidWorks 和 Cad ，雖然是不錯用，但是都是需要花錢購買授權，即使在網路上找一些免費開源碼的繪圖軟體使用上功能卻很有限，仍然不如付費軟體好用，這次使用的 OnShape 不僅使用上很人性化，而且功能應該滿多的(可以依個人習慣裝 App )。","title":"40123156 創造3D齒輪","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123156-chuang-zao-3dchi-lun.html"},{"tags":"bg1","text":"Bg1 40123144期末報告_2 任務1 直立式鍊條繪圖 直立式鍊條程式碼 def twocircle(x, y): # 20 為鏈條兩圓距 # chain 所圍之圓圈半徑為 20/2/math.asin(degree*math.pi/180/2) # degree = math.asin(20/2/radius)*180/math.pi x = 50 y = 0 degree = 12 # 78, 66, 54, 42, 30, 18, 6度 #必須有某些 chain 算座標但是不 render first_degree = 90 - degree repeat = 360 / degree # 第1節也是 virtual chain outstring = ''' mychain = chain() x1, y1 = mychain.basic_rot('''+str(x)+\",\"+str(y)+\", \"+str(first_degree)+''', True) #x1, y1 = mychain.basic_rot('''+str(x)+\",\"+str(y)+\", \"+str(first_degree)+''') ''' # 這裡要上下各多留一節虛擬 chain, 以便最後進行連接 (x7, y7) 與 (x22, y22) for i in range(2, int(repeat)+1): #if i < 7 or i > 23: if i <= 7 or i >= 23: # virautl chain outstring += \"x\"+str(i)+\", y\"+str(i)+\"=mychain.basic_rot(x\"+str(i-1)+\", y\"+str(i-1)+\", 180-\"+str(i*degree)+\", True) \\n\" #outstring += \"x\"+str(i)+\", y\"+str(i)+\"=mychain.basic_rot(x\"+str(i-1)+\", y\"+str(i-1)+\", 90-\"+str(i*degree)+\") \\n\" else: outstring += \"x\"+str(i)+\", y\"+str(i)+\"=mychain.basic_rot(x\"+str(i-1)+\", y\"+str(i-1)+\", 180-\"+str(i*degree)+\") \\n\" p = 7 k = -185 degree = 20 # 70, 50, 30, 10 # 從 i=5 開始, 就是 virautl chain first_degree = 180 - degree repeat = 360 / degree # 第1節不是 virtual chain outstring += ''' #mychain = chain() 直立式鍊條繪圖 先依照老師所算出來的鏈條節點尺寸以及角度做繪圖。 以兩軸相節點座標做為參考修改程式 任務2 2對齒輪契合練習 先設定齒輪軸心，再讓齒輪以前一齒輪為旋轉角度為基準旋轉180度 兩對齒輪齧和程式碼 def threegear(): outstring =''' window.onload=function(){ brython(1); } # 將 導入的 document 設為 doc 主要原因在於與舊程式碼相容 from browser import document as doc # 由於 Python3 與 Javascript 程式碼已經不再混用, 因此來自 Javascript 的變數, 必須居中透過 window 物件轉換 from browser import window # 針對 Javascript 既有的物件, 則必須透過 JSConstructor 轉換 from javascript import JSConstructor import math # 主要用來取得畫布大小 canvas = doc[\"gear1\"] # 此程式採用 Cango Javascript 程式庫繪圖, 因此無需 ctx #ctx = canvas.getContext(\"2d\") # 針對類別的轉換, 將 Cango.js 中的 Cango 物件轉為 Python cango 物件 cango = JSConstructor(window.Cango) # 針對變數的轉換, shapeDefs 在 Cango 中資料型別為變數, 可以透過 window 轉換 shapedefs = window.shapeDefs # 目前 Cango 結合 Animation 在 Brython 尚無法運作, 此刻只能繪製靜態圖形 # in CangoAnimation.js #interpolate1 = window.interpolate # Cobi 與 createGearTooth 都是 Cango Javascript 程式庫中的物件 cobj = JSConstructor(window.Cobj) creategeartooth = JSConstructor(window.createGearTooth) # 經由 Cango 轉換成 Brython 的 cango, 指定將圖畫在 id=\"plotarea\" 的 canvas 上 cgo = cango(\"gear1\") ###################################### # 畫正齒輪輪廓 ##################################### def spur(cx, cy, m, n, pa, theta): # n 為齒數 #n = 17 # pa 為壓力角 #pa = 25 # m 為模數, 根據畫布的寬度, 計算適合的模數大小 # Module = mm of pitch diameter per tooth #m = 0.8*canvas.width/n # pr 為節圓半徑 pr = n*m/2 # gear Pitch radius # generate gear data = creategeartooth(m, n, pa) # Brython 程式中的 print 會將資料印在 Browser 的 console 區 #print(data) gearTooth = cobj(data, \"SHAPE\", { \"fillColor\":\"#ddd0dd\", \"border\": True, \"strokeColor\": \"#606060\" }) #gearTooth.rotate(180/n) # rotate gear 1/2 tooth to mesh, 請注意 rotate 角度為 degree # theta 為角度 gearTooth.rotate(theta) # 單齒的齒形資料經過旋轉後, 將資料複製到 gear 物件中 gear = gearTooth.dup() # gear 為單一齒的輪廓資料 #cgo.render(gearTooth) # 利用單齒輪廓旋轉, 產生整個正齒輪外形 for i in range(1, n): # 將 gearTooth 中的資料複製到 newTooth newTooth = gearTooth.dup() # 配合迴圈, newTooth 的齒形資料進行旋轉, 然後利用 appendPath 方法, 將資料併入 gear newTooth.rotate(360*i/n) # appendPath 為 Cango 程式庫中的方法, 第二個變數為 True, 表示要刪除最前頭的 Move to SVG Path 標註符號 gear.appendPath(newTooth, True) # trim move command = True # 建立軸孔 # add axle hole, hr 為 hole radius hr = 0.6*pr # diameter of gear shaft shaft = cobj(shapedefs.circle(hr), \"PATH\") shaft.revWinding() gear.appendPath(shaft) # retain the 'moveTo' command for shaft sub path gear.translate(cx, cy) # render 繪出靜態正齒輪輪廓 cgo.render(gear) # 接著繪製齒輪的基準線 deg = math.pi/180 Line = cobj(['M', cx, cy, 'L', cx+pr*math.cos(theta*deg), cy+pr*math.sin(theta*deg)], \"PATH\", { 'strokeColor':'blue', 'lineWidth': 1}) cgo.render(Line) # 4個齒輪的齒數 n1 = 20 n2 = 16 n3 = 18 n4 = 25 # m 為模數, 根據畫布的寬度, 計算適合的模數大小 # Module = mm of pitch diameter per tooth # 利用 80% 的畫布寬度進行繪圖 # 計算模數的對應尺寸 m = canvas.width*0.8/(n1+n2+n3+n4) # 根據齒數與模組計算各齒輪的節圓半徑 pr1 = n1*m/2 pr2 = n2*m/2 pr3 = n3*m/2 pr4 = n4*m/2 # 畫布左右兩側都保留畫布寬度的 10% # 依此計算對應的最左邊齒輪的軸心座標 cx = canvas.width*0.1+pr1 cy = canvas.height/2 # pa 為壓力角 pa = 25 # 畫最左邊齒輪, 定位線旋轉角為 0, 軸心座標 (cx, cy) spur(cx, cy, m, n1, pa, 0) # 第2個齒輪將原始的定位線逆時鐘轉 180 度後, 與第1個齒輪正好齒頂與齒頂對齊 # 只要第2個齒輪再逆時鐘或順時鐘轉動半齒的角度, 即可完成囓合 # 每一個齒分別包括從齒根到齒頂的範圍, 涵蓋角度為 360/n, 因此所謂的半齒角度為 180/n spur(cx+pr1+pr2, cy, m, n2, pa, 180-180/n2) # 第2齒與第3齒的囓合, 首先假定第2齒的定位線在 theta 角為 0 的原始位置 # 如此, 第3齒只要逆時鐘旋轉 180 度後, 再逆時鐘或順時鐘轉動半齒的角度, 即可與第2齒囓合 # 但是第2齒為了與第一齒囓合時, 已經從原始定位線轉了 180-180/n2 度 # 而當第2齒從與第3齒囓合的定位線, 逆時鐘旋轉 180-180/n2 角度後, 原先囓合的第3齒必須要再配合旋轉 (180-180/n2 )*n2/n3 spur(cx+pr1+pr2+pr2+pr3, cy, m, n3, pa, 180-180/n3+(180-180/n2)*n2/n3) spur(cx+pr1+pr2+pr2+pr3+pr3+pr4, cy, m, n4, pa, 180-180/n3*n3/n4+(180-180/n2)*n2/n3*n3/n4+(180-180/n3)*n3/n4) ''' 心得 這次鍊條組合雖然可以用目視法來完成，但是使用繪圖程式可以更為 精確的組合，而齒輪程式則需要搞懂如何設定齒輪軸心以及旋轉角度 來讓齒輪齧和，本次作業讓我們了解到程式架構的厲害，只要寫出基本架構你要改變齒數、壓力角、節圓的大小都非常容易。","title":"40123144 期末報告_2","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123144-qi-mo-bao-gao-_2.html"},{"tags":"bg1","text":"2D齒輪: 三個齒輪分別的齒數，如果要增加過減少齒輪只需要在下面增加n3.n4.....(不過接下來還要再下面程式碼新增，不能只是新增齒數) 下圖是計算齒節圓半徑(m是模數) (cx,cy)分別是軸心座標m=模數,n1該齒輪的齒數,pa則是壓力角 要新增一個齒輪在下面多新增一個n4(自行定義齒數) 模數這行在n3後面還要加n4 節圓半徑還要在新增一行(如下圖) 這一行要新增第四個齒輪的座標以及要選轉的角度，第四個齒輪x座標等於原本的加上第一個齒輪的半徑+第二個齒輪的直徑+第三個齒輪的直徑在加上原本齒輪的半徑就是第四個齒輪的半徑(如下圖) 心得:由於程式碼老師已經公布了，所以我們只需要做更改，以及新增齒輪，雖然一開始看不太懂程式碼再寫甚麼，不過老師在上面都有助解這段程式碼再寫甚麼，所以只需要複習再複習就可以了解老師這段程式碼再寫甚麼，有些不懂的程式碼還是需要問同學，最後謝謝教授細心的教導。 自評:75分","title":"40123134 2D齒輪報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123134-2dchi-lun-bao-gao.html"},{"tags":"bg1","text":"3D齒輪: 先到老師的Onshape找到MDE Spur Gear複製老師程式碼後，到自己的Onshape點開左下角的(+)之後建立Feature Studio將程式碼貼上後按Save，就可以獲得正齒輪特徵 如下圖。第一行為齒數，圖中用紅筆畫的為模數很重要!!!!!齒型的模數一定要相等，不然無法配合，壓力角也是。 在來就是組裝，設定好齒輪關係後最重要的就是關係比例，關係比例如何設定呢?將第一齒的齒數/第二齒的齒數就可以得到一個值,,將這個值填入就可以完成齒輪配合(如下圖)如果不填入比例關係會造成齒輪干涉。 心得:現在是雲端時代，我們也必須學會如何在雲端操作及協同，Onshpae也已經將程式碼公開。在組立過程遇到問題，問題在組立好後再旋轉的時候會發生干涉，再詢問同學後發現關係比例要設定不然會在旋轉的時候發生干涉。 自評:75分","title":"40123134 3D齒輪報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123134-3dchi-lun-bao-gao.html"},{"tags":"bg1","text":"2D鍊條 : 將鏈條轉90度(如下圖first_degree加90度)即可讓鍊條轉90度 下圖是修改上半部的鏈條位置(p是左右移動，k是上下移動 利用繪圖軟體or自行計算，算出鏈條的座標位置填到startx.y中即可完成圖(如下圖) 完成結果: 心得: 剛開始還搞不太懂怎麼轉鏈條角度，嘗試了一下發現只能旋轉鍊條還無法將鏈條相接，剛開始只知道一直嘗試修改數字找出如何修改位置，但還是無法將鍊條相接再一起，後來詢問同學後發現要用繪圖軟體計算出鍊條的位置，填入相對位置就可以將鍊條相接在一起。 自評:75分","title":"40123134 2D鍊條報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123134-2dlian-tiao-bao-gao.html"},{"tags":"bg1","text":"2D 正齒輪的設計運算與繪圖 齒輪的因數修改部分。 從這邊可以增加齒輪，也可以更改齒數。 根據齒數與模組計算各齒輪的節圓半徑。 pa 為壓力角。 定義正齒輪的軸心座標 (cx, cy) ，m模數，n1齒數， pa 壓力角，定位線旋轉角，旋轉角決定齒輪是否會囓合。 依照下列演算式，能夠使任何齒數都能囓合。 0 180-180/n2 180-180/n3+(180-180/n2)*n2/n3 180-180/n4+(180-180/n2) n2 n3/n4 完成圖","title":"40123129 網際 2D 正齒輪傳動囓合繪圖","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123129-wang-ji-2d-zheng-chi-lun-chuan-dong-nie-he-hui-tu.html"},{"tags":"bg1","text":"1.首先要熟悉 Onshape 的操作方式，個人覺得與我們熟悉的繪圖軟體相仿，不過有些地方稍微不同，感覺上是全然不同的感受。 2.下列幾個是容易犯錯與該注意的地方: 首先從老師kmolab教學網站，所提供的範例可以找到這個程式碼。 接下來是建立Feature Studio貼上程式碼然後Save，即可得到正齒輪設計特徵。 在自訂特徵可以找到正齒輪設計，再來是設計配合，首先模數一定要相同，再來是兩齒的中心距離，為兩齒輪的節圓半徑相加。 再來是齒輪相互的比例關係是(首輪/末輪)，若搞錯彼此關係齒輪將不會相互咬合。 最後是基板一定要固定(Fix)如此齒輪才會轉動，這樣即完成了。 心得 : 如此好用的線上協同繪圖軟體，想必已是未來工程師的趨勢，Onshape也已開放原始碼供大家使用Feature Studio，這樣自由的程式在台灣，廣泛度不是很高，為了使台灣更進步，必須讓每個機械設計工程師都能了解Onshape的重要性，它不單單只是繪圖而已還可以協同更進一步還可以以程式繪圖!","title":"40123129 網際 3D 正齒輪傳動模擬","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123129-wang-ji-3d-zheng-chi-lun-chuan-dong-mo-ni.html"},{"tags":"ag1","text":"Leo架構部分 1.如圖所示 2.建立畫布 3.註冊 齒輪及鍊條部分 1.繪出2D齒輪 http://cdw13-40323105.rhcloud.com/a40323105/ag1_2D 2.繪出3D嚙合齒輪 先打spur gear讓齒輪指令產生 出現SG圖示 在工具列顯示SG 第一個 ---同齒 : 齒數為25齒,模數為1 https://cad.onshape.com/documents/3c6654b66598ba5c8b705139/w/5a56bdaca9b01b12352faf0e/e/e7fd6e1ededed6c80a075f86 第二個 --- 不同齒 : 一個為25齒,一個為35齒 https://cad.onshape.com/documents/3c6654b66598ba5c8b705139/w/5a56bdaca9b01b12352faf0e/e/58c7aa53c24011e473149e43 Tooth angle 必須要調整,不然在嚙合時會發生干涉 第三個 --- 四齒嚙合 將齒數設定為10齒,20齒,25齒,35齒~ https://cad.onshape.com/documents/86fd9d81eea4d1b5476e2c0a/w/edfaeb51623e755ef318f199/e/573651dde4d2729de24f0e8b 設定完齒數後組裝 組裝完之後要調整tooth angle ,並調整轉向就OK了 心得： 這次要繪出鍊條2D以及齒輪的2D.3D,而齒輪的2D先複製老師的程式碼, 每個齒輪中間都繪有一條橫線,顏色改為紅色,寬度設5。3D齒輪的部分,先用同齒數嚙合，做完後再用不同齒數的，兩者完成後再畫出2個齒輪以上的嚙合，但不知道為何每當我齒輪3跟齒輪4嚙合的時候好像有錯誤,目前還在解決中,我發現當我在更改齒數的時候,模數也會跟著變,且在組合的時候,齒數和角度也是要設定的,不然會干涉,轉速比也要調整。 不僅是齒輪,現在因為兩班一起弄一個倉儲,所以有時候近端開不起來,而我通常都是在班級倉儲裡面做的.所以這時候就會很麻煩,也讓我知道了要自己建一個屬於自己的倉儲會比較安全。 另外在做報告的時候,顯示了utf-8的警告,一開始是沒有的,後來出現了,我那時就在想是不是我修改到別人的md檔,之後我再重新clone後,就OK了,所以我想應該是這個原因 自評：75","title":"40323149 期末報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323149-qi-mo-bao-gao.html"},{"tags":"ag1","text":"Leo架構部分 1.如圖所示 2.建立畫布 3.註冊 齒輪及鍊條部分 1.繪出2D齒輪及鍊條 http://cdw13-40323105.rhcloud.com/a40323105/ag1_2D 2.繪出3D嚙合齒輪 先打spur gear讓齒輪指令產生 出現SG圖示 在工具列顯示SG 第一個 ---同齒 : 齒數為25齒,模數為0.12 https://cad.onshape.com/documents/60326a7d3a0e3379d1ff94b6/w/0b513fb234a493a1c2ee6db3/e/10e58125800804fdd037f585 第二個 --- 不同齒 : 一個為10齒,一個為20齒 https://cad.onshape.com/documents/60326a7d3a0e3379d1ff94b6/w/0b513fb234a493a1c2ee6db3/e/10e58125800804fdd037f585 Tooth angle 必須要調整,不然在嚙合時會發生干涉 第三個 --- 三齒嚙合 將齒數設定為30齒,20齒,40齒 https://cad.onshape.com/documents/60326a7d3a0e3379d1ff94b6/w/0b513fb234a493a1c2ee6db3/e/10e58125800804fdd037f585 第四個 --- 四齒嚙合 將齒數設定為10齒,30齒,30齒,50齒~ https://cad.onshape.com/documents/60326a7d3a0e3379d1ff94b6/w/0b513fb234a493a1c2ee6db3/e/10e58125800804fdd037f585 設定完齒數後組裝 組裝完之後要調整tooth angle ,並調整轉向就OK了 心得： 3D的繪圖本來不是很會，不過在自己慢慢的研究之後，有了很大的進步，而2D的部分，因為都需要用程式碼來解決，所以需要同學的教導，那也因為同學的細心指導，我才能完成這次的期末報告，也謝謝老師這學期的熱心教學，期望未來能夠將這些知識廣泛沿用。 自評：70","title":"40323132 期末報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323132-qi-mo-bao-gao.html"},{"tags":"ag9","text":"啟動 cdw17 協同專案 不同齒輪 畫出齒輪 T=50 畫出齒輪 T=30 接合不同齒輪:因齒數不同，所以比例50/30 同齒輪 畫出齒輪 T=25 接合同齒輪:因為相同齒數比25/25 四個不同齒輪配合 第一齒輪我先畫出齒數=30，模數=1，齒厚=5 第二我在畫出齒數=25，模數=1，齒厚=5 第三我先畫出齒數=15，模數=1，齒厚=5 第四我先畫出齒數=10，模數=1，齒厚=5 四齒做配合 就完成不同齒輪的結合 心得: 很少用過ONSHAPE作配齒輪配合，通常比較常用CREO跟SOLIDWORK做，雖然ONSHAPE有時畫圖會很當，不過能在線上直接畫圖，這次的齒輪也是看同學的示範一步一步畫，還有很久沒有用這個繪圖軟體了，所以慢慢摸索這個繪圖軟體，才回想到這個軟體的功能。 自評:65","title":"40323125 期末報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323125-qi-mo-bao-gao.html"},{"tags":"ag8","text":"啟動 cdw17 協同專案 期末報告內容: 完成網際2D鏈條組立、2D齒輪囓合及Onshape的3D齒輪囓合 2D鏈條 左18齒右30齒 下方圖片為一些名詞解釋 轉90度 下方圖片為一些名詞解釋 2D齒輪囓合 要將原本導入的資料，換成下圖的資料，便會形成五齒 http://imgur.com/FnVzoSe Onshape 3D齒輪 一開始，要先呼叫齒輪的特徵，先點擊綠色框框 搜尋spur，選取有齒輪的圖案 在進行齒輪的參數進行設置，在當中偏轉角度是最重要的 齒輪在進行組立，要先選取兩齒輪的軸心 ，計算齒數比，兩兩進行囓合 下方為完成圖 心得: 期末報告有三部分，分別為2D鍊條、2D齒輪以及3D齒輪。 鏈條的繪製， 我是看著元旭的期末報告來繪製，加上上課有一聽進一部分，因此我鏈條的繪製是這樣產生。 齒輪方面，老師有提供資料，利用老師所提供的資料來繪製齒輪，在繪製中我們把齒數、節圓半徑、壓力角拉出來當作變數， 在囓合時，要偏轉一個齒的角度，才可以進行囓合，而且其中心距也是要經過計算才能得到。 在繪製3D齒輪，由於Onshape有內建的齒輪程式，我們只需要輸入齒輪的參數，就可以直接生成出來，而至於囓合方面，特別注意偏轉角，就可以進行囓合了，再來設定一下齒數比，之後試轉一下，就可以了。","title":"40323154 cdw17 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323154-cdw17-bao-gao.html"},{"tags":"ag9","text":"啟動 cdw17 協同專案 期末報告內容: 前言: 完成網際2D鏈條組立、2D齒輪囓合及Onshape的3D齒輪囓合 任務描述及執行說明: 任務一(2D鏈條): (左18齒右30齒) 轉90度(上30下18) 下圖為對鏈條程式碼的一些參數說明 下圖為對(上30下18齒)的鏈條程式參數的說明，參數設定完成之後，再用for迴圈下去執行 2D齒輪囓合 要先將原本導入的資料庫，換成下圖的資料庫位置 Onshape 3D齒輪 這邊可以先計算兩齒輪囓合的中心距離， 那如果要做斜的嚙合的話，要先加上旋轉的角度， 先將起始位置決定好，再來要偏轉一個齒的角度 齒輪的特徵可以從裏頭進行呼叫，在下圖紅色框框處 在底下收尋spur，底下有齒輪的圖案 下圖是對齒輪的參數設定，當中的偏轉角是囓合的關鍵!! 再來是對齒輪進行組立並囓合，要先選取兩齒輪的軸心 ，再來要去算齒數比，兩兩進行囓合 下圖是完成圖 心得: 期末做的作業，鍊條跟齒輪，感覺上都還算是蠻有趣的，首先鏈條的組立， 要先去用solvespace畫出並推算出鏈條的四個接點，再來用sympy幫忙算出點的座標， 然後再用for迴圈下去跑，就可以完成了。 齒輪方面，首先要先導入資料庫，然後再去跑齒輪的程式，當中我們將齒數、節圓半徑、壓力角拉出來當作變數，其中有畫一條齒輪的基準線是要用來做兩齒輪囓合的時候使用，當然3D方面也是用相同原理進行 囓合，先將兩條基準線接在一起之後，我們會發現兩齒式接在一起的，再來要偏轉一個齒的角度，才可以進行囓合。 3D齒輪方面，由於Onshape上的Featurescript裡頭有內建的齒輪程式，所以我們只需要輸入齒輪的參數，就可以直接生成出來，但是齒數過多的話，它跑出來的齒型會有不正確的齒型，算是裡頭內建程式的錯誤，而至於囓合方面，其實就跟2D囓合原理一樣，而至於斜角的嚙合，首先要去推算出將基準線接在一起的轉角之後，再加上偏轉角，就可以進行囓合了，再來設定一下齒數比，之後試轉一下，就可以了。 pelican 網誌位置: http://cdw11-2014w11.rhcloud.com/static/","title":"40323149 cdw17 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323149-cdw17-bao-gao.html"},{"tags":"ag9","text":"啟動 cdw11 協同專案 期中報告內容: 前言: 利用2D繪圖程式繪製出4個A、BACD及ABCD 任務描述及執行說明: 任務一(繪製出四個A): 首先在下圖圈起來地方的位置註冊藍圖及導入 再來將2D繪圖程式打開，在要繪圖的資料夾底下輸入python wsgi.py執行，若在 Linux 下要用 Python3 啟動: python3 wsgi.py 若是開啟成功，會出現上圖的圖示，若是失敗的話則會出現哪裡有錯誤，這個要再去找看看是哪裡出錯。 在網頁輸入localhost:5000/下圖圈起來的位置1./位置2.，當然這個名稱是自己定的，可以任意變更 開啟之後會出現在這個位置底下的東西 再來要說明如何繪製字母A，首先可以自行繪製，也可以從老師給的參數直接拿過來使用， 接下來要說明的是如何從老師給的參數直接導入繪製出字母A、B、C及D 可以從班級cdw2中取得這些參數，再將這些參數導入，而位置cdw2中的users底下的s2a中的g100裏頭的scrum1_task1.py然後用編輯器打開來 複製a函式的參數，然後貼到自己位置的底下，記得要加上html的語法才可以跑出圖形，不然會只有文字檔而已 html語法 導入成功之後 接著再重複導入A函式，更改一下座標軸，紅色底線部分為座標軸的參數 導入四次A函式之後，及用座標軸調整之間的距離 完成! 任務二(依序排列BACD): 根據上面導入A函式的方法，只是換成導入B、C及D函式而已 只是需要注意到的地方是導入的B函式的參數要更動一下 更動位置如下圖 原本函式在圈起來的地方為0+65，要改成0 改成0之後，所顯示的字母B的起始位置會在原點 之後再依序導入A、C、D函式，再調整一下座標位置 完成! 任務三(由上到下排序ABCD): 依照上面所講的方法，再導入A、B、C及D函式，調整位置就可以完成了 結果說明: 如何繪製出字母A是靠a函式裏頭的很多X、Y軸的參數，經過數學的運算，才會顯示出字母A的形狀，可是我們直接用導入的可能會無法理解裏頭的X、Y的參數更改的話，到底是影響到甚麼地方，這個是我們可以去思考的地方。 其實除了用到座標軸參數去排列以外，也可以去更改它的鍊條顏色，只要在下圖的地方改成你要的顏色就可以了。 結論與討論: 基本上熟悉了之後，知道要去修改哪邊的參數，才會變成想要的結果，還有出問題的時候大概要去哪裡找問題，差不多都有了一些頭緒，只是有些地方可能比較麻煩，可是大致上還ok。 pelican 網誌位置: http://cdw11-2014w11.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform","title":"40323149 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323149-cdw11-bao-gao.html"},{"tags":"ag8","text":"啟動 cdw11 協同專案 期中報告內容: 2D鍊條: 我們可以用網路的程式計算點的座標位子再帶入老師的程式進行座標的變化，和改變內部參數，就能使鍊條進行變形。 2D 齒輪繪圖: 在程式中先用出齒輪的繪圖設定，之後再運用改變齒輪規格數值的方式，如齒數、模數大小、節圓半徑等，就能產生數個齒輪，再利用程式設定方程式，如180-180/n3+(180-180/n2)*n2/n3來讓齒輪間進行嚙 3D齒輪繪圖: 先經由onshape繪出齒輪組的底座，並且要計算出齒輪間的距離及齒輪規格的設計。 運用列表中SG圖式的功能鍵，就能創建齒輪，再運用圖中列表設定齒輪規格，上方三個齒輪齒數分別為24、16、32，模數都為0.25。 再運用設定列表下方角度旋轉就能調整齒輪互相的咬合，並將他們組裝起來。 最後再用animate的功能將齒輪做動，要確認咬合方向和齒數比。 2D 鍊條繪圖: http://gear40323145-ds77317.rhcloud.com/ag8_40323145/twocircle 2D 齒輪繪圖: http://gear40323145-ds77317.rhcloud.com/ag8_40323145/gear 3D齒輪繪圖: https://cad.onshape.com/documents/dd57fc2aecf7abd4f684869e/w/fd3eaca6216a313ecb82bd75/e/718656cb7a03781ebc21b1f0 個人倉儲: https://github.com/40323145 自評分數:70 心得 :這次用到了許多之前教的東西，而在做2D齒輪時，藍色線一直對不起來，雖然聽完老師說後，感覺是了解了他的原理，但怎麼做還是不知道，而3D齒輪就好些了，設定參數和畫圖，一開始用斜對角的方式讓齒輪相接，但接起來有問題，試很久還是找不出原因，最後還是改成垂直對接，而齒輪的角度調整有點麻煩，咬合方面雖然沒甚麼問題，但感覺還是有些吃到，不知是數值運算上的小差距還是視角問題，不過最後還是順利傳動了。","title":"40323145     cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323145-cdw11-bao-gao.html"},{"tags":"ag8","text":"期末報告內容: 2D齒輪囓合 完成圖 1. 載入資料庫 2. 蓋掉程式內定的變數，並新增theta變數 3. 蓋掉程式內定的轉動變數，以theta為轉動變數 4. 設定Line線的線的角度位置和粗細 5. \\會造成畫布消失，所以不加 \" \\ \" 畫布才會產生 6. 設定齒數 7. 設定模數和節圓半徑條件 8. 設定齒輪轉動時，以線假設齒輪轉動位置 2D齒輪圖形: http://cdw112d-40323137.rhcloud.com/ag8_40323137/gear/ Onshape 3D齒輪 完成圖 建立草圖，畫一個版子。 畫三個圓形，延伸為柱子，穿插在齒輪的center hole，計畫三個齒輪，直徑和齒數都是30、35、45，45和30的中心距為37.5，45和35的中心距為40。 延伸呈柱子。 點選\"+\"，並輸入「spur gear」，點選呈SG符號，再點選它，決定齒輪參數，點選center hole 為柱子直徑為10。 進入組合圖，選擇零件。 點拘束條件，可使齒輪在柱子上旋轉。 發現基數與偶數只會干涉，到零件圖新增偏轉角。 到30齒齒輪，點選offset，選擇Tooth angle，輸入180/30，轉一個半角，才會嚙合。 嚙合。 進行齒輪配合旋轉，點選圖片所圈之處，由45齒齒輪為主動輪，其餘兩齒輪為從動輪，在Revolute ratio中，輸入齒數比(45(主)/30、35(從))，兩個主從動輪設定完。 在主動輪(Revolute 2)下，按右鍵，點選Animate。 按Play，齒輪就會進行轉動。 Onshape 3D齒輪嚙合機構: https://cad.onshape.com/documents/115457e789fc4b90eacdeacb/w/409b4f0b1b1a5030ab231e65/e/31f8db14c3cdf4121e43c403/ 實際操作影片 https://vimeo.com/171216363 心得： 覺得2D和3D的所學都非常廣，在2D的繪畫，對於物體的準確性和指令程式，都是息息相關，在3D的學習也是熟悉又好玩，就像3D嚙合齒輪部分，學到可以輸入參數就可以簡單跑出圖形，非常快速，又可以做到做動部分，覺得非常棒，可以將2D的理論，然後直接在3D運作，立即看到實體，非常實用，也學到很多小地方都是要注意到，像角度設定等等，都是影響齒輪非常大的一環，對於設計又更近一步的了解。 pelican 網誌位置: http://cdw11-2014w11.rhcloud.com/static/","title":"40323137 cdw17 期末報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323137-cdw17-qi-mo-bao-gao.html"},{"tags":"ag6","text":"首先複製老師提供的ag100範例中的程式碼並將資料改成自己想要的 完成後到myflaskapp註冊資料 AAAA BACD ABCD 心得:再上傳的途中有點小失誤，無法顯示。但是後來找到問題所在很順利的解決就成功的完成了。 自評:65","title":"40323156 cdw11 字母繪製","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323156-cdw11-zi-mu-hui-zhi.html"},{"tags":"ag6","text":"首先複製老師提供的ag100範例中的程式碼並將資料改成想要的 完成後到myflaskapp註冊資料 連接到瀏覽器中呼叫自行車鍊條的程式 心得:這次也是很順利地完成了。途中沒有太大的問題 自評:65","title":"40323156 cdw11 自行車鍊條繪製","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323156-cdw11-zi-xing-che-lian-tiao-hui-zhi.html"},{"tags":"ag6","text":"首先複製老師提供的ag100範例中的程式碼並將資料改成自己想要的 完成後到myflaskapp註冊資料 連接到瀏覽器中呼叫鍊圓的程式並且給予數值 更改數值可以調整位置及大小 心得:跟前一個一樣複製改數值，就可以很順利的完成圓鍊。 自評:65","title":"40323156 cdw11 鍊圓繪製","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323156-cdw11-lian-yuan-hui-zhi.html"},{"tags":"ag6","text":"首先複製老師提供的ag100範例中的程式碼並將資料改成自己想要的 完成後到myflaskapp註冊資料 連接到瀏覽器中呼叫齒輪的程式並給他數值 心得:複製老師的程式，在改其他的數值。就很順利的完成也可以看到不同的大小。 自評:65","title":"40323156 cdw11 2D齒輪嚙合心得報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323156-cdw11-2dchi-lun-nie-he-xin-de-bao-gao.html"},{"tags":"ag6","text":"先調整尺寸為mm 加入齒輪 設定4個齒輪的齒數及模數 第一個25齒 模數3 第二個35齒 模數3 第三個45齒 模數3 第四個60齒 模數3 劃一板材做符合的間距，第一跟第二的節圓直徑相加除二，以此類推二跟三、三跟四。 板子成形 組合圖 組合完後要讓一跟二連動，二跟三、三跟四，在輸入他們的齒數25/35、35/45、45/60 心得:我一開始找不到尺寸，可是後面一步一步來很順利的就做到組合的部分，開始連接的時候有些不順就是會重疊在一起，不過後來發現問題就順利的完成可惜好像因為程式的問題齒輪接觸有些問題。 自評:65","title":"40323156 cdw11 3D齒輪嚙合心得報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323156-cdw11-3dchi-lun-nie-he-xin-de-bao-gao.html"},{"tags":"ag6","text":"從老師的ag100的loe裡取出資料，並將資料適當的修改 完成後到myflaskapp註冊資料 AAAA BACD ABCD 心得:要完成這些字母的排列有很多種方法，只是我原本使用的方式沒有向老師給的程式碼那麼簡單，花了很多的時間再更改座標上。 自評:65","title":"40323155 cdw11 字母繪製","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323155-cdw11-zi-mu-hui-zhi.html"},{"tags":"ag6","text":"從老師的ag100的loe裡取出資料，並將資料適當的修改 完成後到myflaskapp註冊資料 連接到瀏覽器中呼叫自行車鍊條的程式 心得:有了做鍊圓的經驗之後，雖然這個比較複雜很多，不過只要慢慢地調整數值時鍊條相切就做得出來了 自評:65","title":"40323155 cdw11 自行車鍊條繪製","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323155-cdw11-zi-xing-che-lian-tiao-hui-zhi.html"},{"tags":"ag6","text":"從老師的ag100的loe裡取出資料，並將資料適當的修改 完成後到myflaskapp註冊資料 連接到瀏覽器中呼叫鍊圓的程式並且給予數值 心得:剛開始聽到老師的說明這個程式的原理，根本完全聽不懂!要學好程式果然數學也要很好呢...。 自評:65","title":"40323155 cdw11 鍊圓繪製","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323155-cdw11-lian-yuan-hui-zhi.html"},{"tags":"ag6","text":"從老師的ag100的loe裡取出資料，並將資料適當的修改 完成後到myflaskapp註冊資料 連接到瀏覽器中呼叫齒輪的程式並給他數值 心得:剛開始做這個齒輪的時候遇到了一些問題，原本以為是因為我的失誤，後來老師修正的程式碼之後就做出來了，不過都畫出齒輪來了，其實還蠻想看看它轉動的樣子。 自評:65","title":"40323155 cdw11 2D齒輪嚙合心得報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323155-cdw11-2dchi-lun-nie-he-xin-de-bao-gao.html"},{"tags":"ag6","text":"點擊右上角的+，輸入spur gear搜尋建立齒輪的程式 並分別建立齒數為25、45、45、56的4個齒輪，模數皆為2 建立一個放置齒輪的平板，需依照齒輪間的中心距來鑽出圓孔 在組合圖中利用旋轉隊的約束將齒輪裝配在平板上 點擊右上角齒輪嚙合的選項並選擇好要配合的旋轉對後，輸入轉速比，可以直接使用齒數去計算 完成圖 心得:ONSHAPE這一個新的功能給了我們這些使用者很大的自由度，雖然說必須要知道怎麼去寫這些程式碼才能夠好好地善用，這次使用了這個程式真的覺得相當的方便。 自評:65","title":"40323155 cdw11 3D齒輪嚙合心得報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323155-cdw11-3dchi-lun-nie-he-xin-de-bao-gao.html"},{"tags":"ag6","text":"複製老師提供的程式碼 完成後到myflaskapp註冊資料 AAAA BACD ABCD 心得:這個是用來測試期中考前所學的東西，雖然不會向老師的程式碼看起來那麼輕易，不過還是能夠用出來 自評:65","title":"40323152 cdw11 字母繪製","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323152-cdw11-zi-mu-hui-zhi.html"},{"tags":"ag6","text":"複製老師提供的程式碼 完成後到myflaskapp註冊資料 連接到瀏覽器中呼叫自行車鍊條的程式 心得:這個比上次的稍為複雜一點，雖然做的時候有一點不順利，不過還是好好的完成了 自評:65","title":"40323152 cdw11 自行車鍊條繪製","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323152-cdw11-zi-xing-che-lian-tiao-hui-zhi.html"},{"tags":"ag6","text":"複製老師提供的程式碼 完成後到myflaskapp註冊資料 連接到瀏覽器中呼叫鍊圓的程式並且給予數值 心得:這個蠻簡單的，沒有遇到甚麼太大的困難 自評:65","title":"40323152 cdw11 鍊圓繪製","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323152-cdw11-lian-yuan-hui-zhi.html"},{"tags":"ag6","text":"複製老師提供的程式碼 完成後到myflaskapp註冊資料 連接到瀏覽器中呼叫齒輪的程式並給他數值 心得:可以控制網址上的3個數值來調整齒輪裝配的大小，感覺很有趣 自評:65","title":"40323152 cdw11 2D齒輪嚙合心得報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323152-cdw11-2dchi-lun-nie-he-xin-de-bao-gao.html"},{"tags":"ag6","text":"加入spurgear的齒輪建立程式 使用齒數20、30、40、50齒，且模數為2mm建立四個齒輪 繪製一個平板並鑽上四個圓孔，軸心的中心距需計算齒輪的中心距後設定 將齒輪裝配於平板後點選右上角的齒輪裝配，並依照選定的齒輪的齒數設定迴轉比 完成圖 心得:用這種方式很簡單就能夠建立齒輪，相當的方便，不過在齒輪組裝上，不知道為什麼都會無法好好的嚙合，也找不到其他的設定可以修正這個問題。 自評:65","title":"40323152 cdw11 3D齒輪嚙合心得報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323152-cdw11-3dchi-lun-nie-he-xin-de-bao-gao.html"},{"tags":"ag6","text":"先到老師提供的ag100抓取資料 完成後到myflaskapp註冊資料 AAAA BACD ABCD 心得:這次要做的東西比較多，有很多東西要用，但是步驟都一樣，也很輕鬆地完成了。 自評:65","title":"40323147 cdw11 字母繪製","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323147-cdw11-zi-mu-hui-zhi.html"},{"tags":"ag6","text":"先到老師提供的ag100抓取資料 完成後到myflaskapp註冊資料 連接到瀏覽器中呼叫自行車鍊條的程式 心得:這次我們要利用老師提供的資料,之後進行修改數值，就可以順利的完成了。 自評:65","title":"40323147 cdw11 自行車鍊條繪製","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323147-cdw11-zi-xing-che-lian-tiao-hui-zhi.html"},{"tags":"ag6","text":"先到老師提供的ag100抓取資料 完成後到myflaskapp註冊資料 連接到瀏覽器中呼叫鍊圓的程式並且給予數值 心得:上次做了之後有點不熟，後來請教同學之後，讓我更了解如何去應用。 自評:65","title":"40323147 cdw11 鍊圓繪製","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323147-cdw11-lian-yuan-hui-zhi.html"},{"tags":"ag6","text":"先到老師提供的ag100抓取資料 完成後到myflaskapp註冊資料 連接到瀏覽器中呼叫齒輪的程式並給他數值 心得:這次的東西第一次做有點不熟，所以一直弄不太好，常常顯示出來就怪怪的，一直嘗試了很久才完成他。 自評:65","title":"40323147 cdw11 2D齒輪嚙合心得報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323147-cdw11-2dchi-lun-nie-he-xin-de-bao-gao.html"},{"tags":"ag6","text":"點一下右上角的+，搜尋\"spur gear\"，選擇一個之後，會出現SG選項可以建立齒輪 齒輪1的模數為2，尺數為25 齒輪2的模數為2，尺數為50 齒輪3的模數為2，尺數為40 齒輪4的模數為2，尺數為60 之後，要畫一個板子作為放置齒輪的地方，孔之間的距離為兩個齒輪節徑相加除以2 再來要進行組合，將齒輪和對應的孔結合，選擇\"Gear relation\"，選擇兩個齒輪之後，輸入數值為齒數相加除以2 完成圖 心得:這次學了如何應用onshape畫出齒輪，再進行組合，組合完在使其嚙合，需要注意的點是每個齒輪的模數都必須相同，這樣才能完美的嚙合。 自評:65","title":"40323147 cdw11 3D齒輪嚙合心得報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323147-cdw11-3dchi-lun-nie-he-xin-de-bao-gao.html"},{"tags":"ag6","text":"到ag100拿取老師所給的程式範例 完成後到myflaskapp註冊資料 AAAA BACD ABCD 心得:其中過後用來測試所學的東西，因為期中報告有做過了，所以很快地就能完成要求，只是看到老師的程式之後還是會覺得太複雜太慢 自評:65","title":"40323133 cdw11 字母繪製","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323133-cdw11-zi-mu-hui-zhi.html"},{"tags":"ag6","text":"到ag100拿取老師所給的程式範例 完成後到myflaskapp註冊資料 連接到瀏覽器中呼叫自行車鍊條的程式 心得:這個看到就覺得很複雜，還好最後還是好好的弄出來了 自評:65","title":"40323133 cdw11 自行車鍊條繪製","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323133-cdw11-zi-xing-che-lian-tiao-hui-zhi.html"},{"tags":"ag6","text":"到ag100拿取老師所給的程式範例 完成後到myflaskapp註冊資料 連接到瀏覽器中呼叫鍊圓的程式並且給予數值 心得:因為從一開始就聽不太懂要怎麼做了，所以馬上跑去尋找會的同學問才知道怎麼弄，在做報告時也只是拿老師的程式更改而已 自評:65","title":"40323133 cdw11 鍊圓繪製","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323133-cdw11-lian-yuan-hui-zhi.html"},{"tags":"ag6","text":"到ag100拿取老師所給的程式範例 完成後到myflaskapp註冊資料 連接到瀏覽器中呼叫齒輪的程式並給他數值 心得:上課的時候原本都無法好好的將齒輪的圖顯示出來，直到快下課時才成功地讓齒輪嚙合 自評:65","title":"40323133 cdw11 2D齒輪嚙合心得報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323133-cdw11-2dchi-lun-nie-he-xin-de-bao-gao.html"},{"tags":"ag6","text":"加入spurgear 分別建立3個齒輪，模數需相同 繪製平面並鑽上圓孔，圓孔的中心距為齒輪的齒數*模數相加後除二 將齒輪裝配於平板上 利用齒輪裝配使齒輪嚙合，轉速比依齒數計算 完成圖 心得:原本不太會使用齒輪裝配的指令，因為不知道它不是要直接點齒輪，而是要點迴轉對，請同學幫忙之後才知道是這樣子。 自評:65","title":"40323133 cdw11 3D齒輪嚙合心得報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323133-cdw11-3dchi-lun-nie-he-xin-de-bao-gao.html"},{"tags":"ag5","text":"40123145 - 期末報告 2D齒輪嚙合 http://python40123145-40123145.rhcloud.com/ag5_40123145_2/threegear/ 2D齒輪嚙合程式碼 網際 2D 繪圖 window.onload=function(){ brython(1); } # 將 導入的 document 設為 doc 主要原因在於與舊程式碼相容 from browser import document as doc # 由於 Python3 與 Javascript 程式碼已經不再混用, 因此來自 Javascript 的變數, 必須居中透過 window 物件轉換 from browser import window # 針對 Javascript 既有的物件, 則必須透過 JSConstructor 轉換 from javascript import JSConstructor import math # 主要用來取得畫布大小 canvas = doc[\"gear1\"] # 此程式採用 Cango Javascript 程式庫繪圖, 因此無需 ctx #ctx = canvas.getContext(\"2d\") # 針對類別的轉換, 將 Cango.js 中的 Cango 物件轉為 Python cango 物件 cango = JSConstructor(window.Cango) # 針對變數的轉換, shapeDefs 在 Cango 中資料型別為變數, 可以透過 window 轉換 shapedefs = window.shapeDefs # 目前 Cango 結合 Animation 在 Brython 尚無法運作, 此刻只能繪製靜態圖形 # in CangoAnimation.js #interpolate1 = window.interpolate # Cobi 與 createGearTooth 都是 Cango Javascript 程式庫中的物件 cobj = JSConstructor(window.Cobj) creategeartooth = JSConstructor(window.createGearTooth) # 經由 Cango 轉換成 Brython 的 cango, 指定將圖畫在 id=\"plotarea\" 的 canvas 上 cgo = cango(\"gear1\") ###################################### # 畫正齒輪輪廓 ##################################### def spur(cx, cy, m, n, pa): # n 為齒數 #n = 25 # pa 為壓力角 #pa = 25 # m 為模數, 根據畫布的寬度, 計算適合的模數大小 # Module = mm of pitch diameter per tooth #m = 0.8*canvas.width/n # pr 為節圓半徑 pr = n*m/2 # gear Pitch radius # generate gear data = creategeartooth(m, n, pa) # Brython 程式中的 print 會將資料印在 Browser 的 console 區 #print(data) gearTooth = cobj(data, \"SHAPE\", { \"fillColor\":\"#ddd0dd\", \"border\": True, \"strokeColor\": \"#606060\" }) gearTooth.rotate(180/n) # rotate gear 1/2 tooth to mesh # 單齒的齒形資料經過旋轉後, 將資料複製到 gear 物件中 gear = gearTooth.dup() # gear 為單一齒的輪廓資料 #cgo.render(gearTooth) # 利用單齒輪廓旋轉, 產生整個正齒輪外形 for i in range(1, n): # 將 gearTooth 中的資料複製到 newTooth newTooth = gearTooth.dup() # 配合迴圈, newTooth 的齒形資料進行旋轉, 然後利用 appendPath 方法, 將資料併入 gear newTooth.rotate(360*i/n) # appendPath 為 Cango 程式庫中的方法, 第二個變數為 True, 表示要刪除最前頭的 Move to SVG Path 標註符號 gear.appendPath(newTooth, True) # trim move command = True # 建立軸孔 # add axle hole, hr 為 hole radius hr = 0.6*pr # diameter of gear shaft shaft = cobj(shapedefs.circle(hr), \"PATH\") shaft.revWinding() gear.appendPath(shaft) # retain the 'moveTo' command for shaft sub path #cx = canvas.width/2 #cy = canvas.height/2 gear.translate(cx, cy) # render 繪出靜態正齒輪輪廓 cgo.render(gear) # 接著繪製齒輪的基準線 deg = math.pi/180 Line = cobj(['M', cx, cy, 'L', cx+pr*math.cos(180/n*deg), cy+pr*math.sin(180/n*deg)], \"PARH\", {'strokeColor':'blue' ,'linWidth':4}) cgo.render(Line) cx = canvas.width/2 cy = canvas.height/2 # n 為齒數 n = 25 # pa 為壓力角 pa = 25 # m 為模數, 根據畫布的寬度, 計算適合的模數大小 # Module = mm of pitch diameter per tooth m = 0.8*canvas.width/n/4 spur(cx-118, cy, m, n, pa) spur(cx, cy, m, 11, pa) spur(cx+80, cy, m, 13, pa) spur(cx+179, cy, m, 17, pa) 說明: 藉由老師給的齒輪程式碼，並且載入資料庫，再更改程式碼中的齒數、模數，就可以產生齒輪，並且自己判斷嚙合，改變壓力角以及齒數達到嚙合的效果。增加spur(cx, cy, m, *, pa).可以增加一個齒輪。 2D鍊條直立 http://python40123145-40123145.rhcloud.com/ag5_40123145_2/twocircle 2D鍊條程式碼 網際 2D 繪圖 window.onload=function(){ brython(1); } from javascript import JSConstructor from browser import alert from browser import window import math cango = JSConstructor(window.Cango) cobj = JSConstructor(window.Cobj) shapedefs = window.shapeDefs obj2d = JSConstructor(window.Obj2D) cgo = cango(\"plotarea\") cgo.setWorldCoords(-250, -250, 500, 500) # 畫軸線 cgo.drawAxes(0, 240, 0, 240, { \"strokeColor\":\"#aaaaaa\", \"fillColor\": \"#aaaaaa\", \"xTickInterval\": 20, \"xLabelInterval\": 20, \"yTickInterval\": 20, \"yLabelInterval\": 20}) deg = math.pi/180 # 將繪製鏈條輪廓的內容寫成 class 物件 class chain(): # 輪廓的外型設為 class variable chamber = \"M -6.8397, -1.4894 A 7, 7, 0, 1, 0, 6.8397, -1.4894 A 40, 40, 0, 0, 1, 6.8397, -18.511 A 7, 7, 0, 1, 0, -6.8397, -18.511 A 40, 40, 0, 0, 1, -6.8397, -1.4894 z\" #chamber = \"M 0, 0 L 0, -20 z\" cgoChamber = window.svgToCgoSVG(chamber) def __init__(self, fillcolor=\"green\", border=True, strokecolor= \"tan\", linewidth=2, scale=1): self.fillcolor = fillcolor self.border = border self.strokecolor = strokecolor self.linewidth = linewidth self.scale = scale # 利用鏈條起點與終點定義繪圖 def basic(self, x1, y1, x2, y2): self.x1 = x1 self.y1 = y1 self.x2 = x2 self.y2 = y2 # 注意, cgo.Chamber 為成員變數 cmbr = cobj(self.cgoChamber, \"SHAPE\", { \"fillColor\": self.fillcolor, \"border\": self.border, \"strokeColor\": self.strokecolor, \"lineWidth\": self.linewidth }) # hole 為原點位置 hole = cobj(shapedefs.circle(4*self.scale), \"PATH\") cmbr.appendPath(hole) # 複製 cmbr, 然後命名為 basic1 basic1 = cmbr.dup() # 因為鏈條的角度由原點向下垂直, 所以必須轉 90 度, 再考量 atan2 的轉角 basic1.rotate(math.atan2(y2-y1, x2-x1)/deg+90) # 放大 scale 倍 cgo.render(basic1, x1, y1, self.scale, 0) # 利用鏈條起點與旋轉角度定義繪圖, 使用內定的 color, border 與 linewidth 變數 def basic_rot(self, x1, y1, rot, v=False): # 若 v 為 True 則為虛擬 chain, 不 render self.x1 = x1 self.y1 = y1 self.rot = rot self.v = v # 注意, cgoChamber 為成員變數 cmbr = cobj(self.cgoChamber, \"SHAPE\", { \"fillColor\": self.fillcolor, \"border\": self.border, \"strokeColor\": self.strokecolor, \"lineWidth\": self.linewidth }) # hole0 為原點位置 hole = cobj(shapedefs.circle(4*self.scale), \"PATH\") cmbr.appendPath(hole) # 根據旋轉角度, 計算 x2 與 y2 x2 = x1 + 20*math.cos(rot*deg)*self.scale y2 = y1 + 20*math.sin(rot*deg)*self.scale # 複製 cmbr, 然後命名為 basic1 basic1 = cmbr.dup() # 因為鏈條的角度由原點向下垂直, 所以必須轉 90 度, 再考量 atan2 的轉角 basic1.rotate(rot+90) # 放大 scale 倍 if v == False: cgo.render(basic1, x1, y1, self.scale, 0) return x2, y2 mychain = chain() x1, y1 = mychain.basic_rot(50,0, 78, True) #x1, y1 = mychain.basic_rot(50,0, 78) x2, y2=mychain.basic_rot(x1, y1, 180-24, True) x3, y3=mychain.basic_rot(x2, y2, 180-36, True) x4, y4=mychain.basic_rot(x3, y3, 180-48, True) x5, y5=mychain.basic_rot(x4, y4, 180-60, True) x6, y6=mychain.basic_rot(x5, y5, 180-72, True) x7, y7=mychain.basic_rot(x6, y6, 180-84, True) x8, y8=mychain.basic_rot(x7, y7, 180-96) x9, y9=mychain.basic_rot(x8, y8, 180-108) x10, y10=mychain.basic_rot(x9, y9, 180-120) x11, y11=mychain.basic_rot(x10, y10, 180-132) x12, y12=mychain.basic_rot(x11, y11, 180-144) x13, y13=mychain.basic_rot(x12, y12, 180-156) x14, y14=mychain.basic_rot(x13, y13, 180-168) x15, y15=mychain.basic_rot(x14, y14, 180-180) x16, y16=mychain.basic_rot(x15, y15, 180-192) x17, y17=mychain.basic_rot(x16, y16, 180-204) x18, y18=mychain.basic_rot(x17, y17, 180-216) x19, y19=mychain.basic_rot(x18, y18, 180-228) x20, y20=mychain.basic_rot(x19, y19, 180-240) x21, y21=mychain.basic_rot(x20, y20, 180-252) x22, y22=mychain.basic_rot(x21, y21, 180-264) x23, y23=mychain.basic_rot(x22, y22, 180-276, True) x24, y24=mychain.basic_rot(x23, y23, 180-288, True) x25, y25=mychain.basic_rot(x24, y24, 180-300, True) x26, y26=mychain.basic_rot(x25, y25, 180-312, True) x27, y27=mychain.basic_rot(x26, y26, 180-324, True) x28, y28=mychain.basic_rot(x27, y27, 180-336, True) x29, y29=mychain.basic_rot(x28, y28, 180-348, True) x30, y30=mychain.basic_rot(x29, y29, 180-360, True) #mychain = chain() p1, k1 = mychain.basic_rot(73.5,-185, 160) p2, k2=mychain.basic_rot(p1, k1, 180-40) p3, k3=mychain.basic_rot(p2, k2, 180-60) p4, k4=mychain.basic_rot(p3, k3, 180-80) p5, k5=mychain.basic_rot(p4, k4, 180-100, True) p6, k6=mychain.basic_rot(p5, k5, 180-120, True) p7, k7=mychain.basic_rot(p6, k6, 180-140, True) p8, k8=mychain.basic_rot(p7, k7, 180-160, True) p9, k9=mychain.basic_rot(p8, k8, 180-180, True) p10, k10=mychain.basic_rot(p9, k9, 180-200, True) p11, k11=mychain.basic_rot(p10, k10, 180-220, True) p12, k12=mychain.basic_rot(p11, k11, 180-240, True) p13, k13=mychain.basic_rot(p12, k12, 180-260, True) p14, k14=mychain.basic_rot(p13, k13, 180-280) p15, k15=mychain.basic_rot(p14, k14, 180-300) p16, k16=mychain.basic_rot(p15, k15, 180-320) p17, k17=mychain.basic_rot(p16, k16, 180-340) p18, k18=mychain.basic_rot(p17, k17, 180-360) m1, n1 = mychain.basic_rot(p4, k4, 100) m2, n2=mychain.basic_rot(m1, n1, 100) m3, n3=mychain.basic_rot(m2, n2, 100) m4, n4=mychain.basic_rot(m3, n3, 100) m5, n5=mychain.basic_rot(m4, n4, 100) m6, n6=mychain.basic_rot(m5, n5, 100) m7, n7=mychain.basic_rot(m6, n6, 100) m8, n8=mychain.basic_rot(m7, n7, 100) m9, n9=mychain.basic_rot(m8, n8, 100) m10, n10=mychain.basic_rot(m9, n9, 100) m11, n11=mychain.basic_rot(m10, n10, 100) r1, s1 = mychain.basic_rot(p13, k13, 80) r2, s2=mychain.basic_rot(r1, s1, 80) r3, s3=mychain.basic_rot(r2, s2, 80) r4, s4=mychain.basic_rot(r3, s3, 80) r5, s5=mychain.basic_rot(r4, s4, 80) r6, s6=mychain.basic_rot(r5, s5, 80) r7, s7=mychain.basic_rot(r6, s6, 80) r8, s8=mychain.basic_rot(r7, s7, 80) r9, s9=mychain.basic_rot(r8, s8, 80) r10, s10=mychain.basic_rot(r9, s9, 80) r11, s11=mychain.basic_rot(r10, s10, 80) mychain.basic(x7, y7, m11, n11) mychain.basic(x22, y22, r11, s11) 說明: 藉著老師算出來的數值再畫出圖來，再另用座標的關係和角度，達到直立的效果，也可以使用畫圖的方式達到更精確的位置。 onshape 3D齒輪 https://cad.onshape.com/documents/aeb63baf86a0f1cb63c7b0cc/w/236482a88c88d73f7d3b356b/e/be28924879143778a5fe6cdf 說明: 導入Feacture script齒輪模組設定齒數、模數、壓力角和孔徑，再藉由每個組員個別畫出齒輪在嚙合起來完成齒輪組。 心得: 期末後開始作業難度增加了，靠自己的拼拼湊湊以及同學幫忙才能完成報告，協同的重要性也在期末後展現出來，大家分工到組合確實減少了非常多得時間，期望修完這門課後到業界會因為協同而帶來更多的方便，時代變遷的非常快，從當初需要面對面溝通到現在","title":"40123145 - 期末報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123145-qi-mo-bao-gao.html"},{"tags":"ag4","text":"啟動 cdw11 協同專案","title":"40323138 cdw18","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323138-cdw18.html"},{"tags":"ag4","text":"啟動 cdw17 協同專案 任務說明: 一.2D鏈條組立 二.2D齒輪囓合 三.Onshape的3D齒輪囓合 一.2D鏈條組立 http://cdw17-40323138.rhcloud.com/a40323138/eighteenthirty http://cdw17-40323138.rhcloud.com/a403231381/eighteenthirty 程式說明: 二.2D齒輪 http://cdw17-40323138.rhcloud.com/a40323138/gears 程式說明: 三.onshpae 3D齒輪組 onshpae 2 個 3D製圖同齒齒輪 : https://cad.onshape.com/documents/37e915cf4aee035da1cf5ddb/w/cb62ad9df02ae7feca2bcd7c/e/fae938aa85639c88794c46c0 onshpae 4 個 3D製圖齒輪 : https://cad.onshape.com/documents/37e915cf4aee035da1cf5ddb/w/cb62ad9df02ae7feca2bcd7c/e/fae938aa85639c88794c46c0 說明: 心得: 這次期末也做2D,3D,齒輪,老師2D部分老師都有給基本的架構,需要花時間去研究它的程式,寫程式去改時存檔,並在LOCALHOST顯示藍圖,常常顯示不出來,程式一直有錯次,並且去應用延伸,花了不少時間,但也學到了很多齒輪有關的事情,也複習了之前的機械原理,也學了很多齒輪的東西,了解很多齒輪的知識,3D ONHAPE 也有要花時間去研究學習,嚙合時比較麻煩,要去算他的偏轉角,在做偏轉角算過了以後,有時還是有些誤差,還要去微調蠻麻煩的,最後的約束條件,轉動時上個齒輪比較完成了 自評:75","title":"40323138 cdw17 期末報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323138-cdw17-qi-mo-bao-gao.html"},{"tags":"ag4","text":"啟動 cdw17 協同專案 期末報告內容: 完成網際2D鏈條組立、2D齒輪囓合及Onshape的3D齒輪囓合 1.繪出2D齒輪 http://40323130-40323130.rhcloud.com/ag4_40323130/gear 標題不知道為什麼變這樣... 2.利用onshape繪出3D嚙合齒輪 更改單位 將英制單位轉換成公制單位 輸入spur gear，找到齒輪模組 在工具列顯示SG，模組建立完成 在繪製過程中，齒輪的tooth angle須要做些微調,不然在嚙合時會發生干涉 微調前 微調後 齒輪囓合完後，再改齒輪的速比(relation ratio) 要注意齒輪的方向，若方向不對可由reverse direction的選項作更改 繪製同齒齒輪囓合: 齒數為25齒,模數為2 https://cad.onshape.com/documents/04367570a69bddb7224a3b87/w/8489c549386051beaa8c7e60/e/79bf506ec972aad91fa11962 繪製不同齒齒輪囓合: 一個為30齒,一個為50齒，模數皆為2 https://cad.onshape.com/documents/22cb85a60490707745a98b74/w/dcb3aee5a03b3828224c4c70/e/44ccf3da0a2bd99802e5662c 繪製4顆不同齒齒輪囓合: https://cad.onshape.com/documents/2e49d57ffc7a17759d02ac6a/w/2c539d05cf7c08ef10a43bdb/e/792ece27d8554767d02e08e6 心得:在2D鍊條和齒輪的部分，一開始什麼都看不懂，浪費了不少時間，後來在蔡俊佶同學的教導下，雖然花了不少時間在改參數上，但最後有成功的畫出老師要求的圖形，要是沒有同學教我，應該會卡關卡到期末吧~在3D齒輪的部分就學的不錯，除了囓合時花了點時間在調整齒輪的角度跟轉速比之外，其他時間都蠻順利的，看到齒輪完美的模擬出想要的結果時還挺開心的，3D齒輪的部分比較簡單。 自評分數:70","title":"40323130 cdw17 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323130-cdw17-bao-gao.html"},{"tags":"ag4","text":"啟動 cdw13 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40323130 cdw13 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323130-cdw13-bao-gao.html"},{"tags":"ag3","text":"啟動 cdw17 協同專案 期末報告內容: 完成網際2D鏈條組立、2D齒輪囓合及Onshape的3D齒輪囓合 1.繪出2D齒輪 http://40323130-40323130.rhcloud.com/ag4_40323130/gear 繪出2D鏈條 2.利用onshape繪出3D嚙合齒輪 繪製齒輪 2個同齒: 2個不同齒: 4個不同齒: 放置齒輪在板上 2個同齒: 2個不同齒: 4個不同齒: 相互運轉 2個同齒: 2個不同齒: 4個不同齒: 繪製同齒齒輪囓合: 齒數為25齒,模數為2 https://cad.onshape.com/documents/ff7c978e0b42168cb66cde3e/w/3314904b026cfff6ceda01c5/e/58b1798848df6d58fa682108 繪製不同齒齒輪囓合: 一個為30齒,一個為50齒，模數皆為2 https://cad.onshape.com/documents/b077fed82d973439e5bc51cf/w/2657c6fb52a518fd1743d24d/e/f82e15519404e7c2a5624a2c 繪製4個不同齒齒輪囓合: https://cad.onshape.com/documents/48e8e8d00cc06fcd0cd20ff2/w/51539761f25122262bdfa598/e/f3d11ae9d9d68d639ef8fb3a 心得:在這學期我學習到了2D鍊條組合、2D齒輪組合、3D齒輪組合的設計，尤其在組件3D齒輪時，在囓合時，有時角度會對不準，都要慢慢得調角度，不過學習到這些也方便以後在業界時能使用到。 雖然現在接觸的都只是基礎，但未來有機會都可以繼續進修，對我的未來也會有幫助。也謝謝老師與幫助我的同學，謝謝老師每節課都認真得教導我們，讓我們學到了很多東西；也謝謝幫助我的同學們，讓我可以順利的完成每次功課。每次在推到遠端的時候都會很緊張，怕會不會有哪理錯誤，但看到推成功後，成就感真的很大。 自評分數:70","title":"40323103 cdw17 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323103-cdw17-bao-gao.html"},{"tags":"ag3","text":"啟動 cdw17 協同專案 期末報告內容: 完成網際2D鏈條組立、2D齒輪囓合及Onshape的3D齒輪囓合 1.繪出2D齒輪 http://40323101-40323101.rhcloud.com/ag3_40323101/gear 2.利用onshape繪製3D齒輪嚙合 輸入spur，就能找到齒輪模組 在工具列顯示SG，模組建立完成 (1.)同齒(25齒,模數2mm)設定 (2.)不同齒(25/20齒,模數2mm)設定 (3.)4個齒輪(20/30/40/50齒,模數2mm)設定 在繪製齒輪時，齒輪的tooth angle(偏轉角度)須要做調整,不然在嚙合時會有干涉的情況 齒輪干涉 調整角度後，就可以嚙合 繪製同齒齒輪囓合: 齒數為25齒,模數為2 https://cad.onshape.com/documents/bcb80f7105d74722798f0a60/w/7afacd9b9b078ae0f84bbd52/e/6c3e34a1829314c51d1f3919 繪製不同齒齒輪囓合: 一個為25齒,一個為20齒，模數皆為2 https://cad.onshape.com/documents/8256843fa741d8881ae6ee99/w/5e98be35e8021d42fd4c55c9/e/ca92000e1a2a2165d2effcaf 繪製4顆不同齒齒輪囓合: https://cad.onshape.com/documents/2cac8f7d06665534b012437c/w/306c81dbdf220891ffe757fc/e/a99680f218aa118644f3ef82 心得:此學期的期末報告是要做出2D及3D的齒輪,還有2D鍊條,在畫齒輪3D圖時,我先畫將同齒的嚙合之後再畫不同齒,都可以很順利地嚙合轉動,而在不同齒的地方我改了轉速比,但在嘗試4個齒輪時,一下這2個可以,另一個又不行,之後問同學後,才知道要原來要改偏轉角度才不會有干涉的情況,而2D的齒輪及鍊條就比較沒什麼大問題。這次在倉儲､遠端､近端也有請教同學很多東西,才了解,也順利完成期末報告的內容。 自評分數:70","title":"40323101 cdw17 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323101-cdw17-bao-gao.html"},{"tags":"ag2","text":"啟動 cdw15 協同專案 2D齒輪 改變齒輪齒數做測試 利用下面程式修改並存成html檔 (已修改齒輪齒數做範例) 3D Onshape onshape 網址 Onshape 3D 網址 心得: 我發現螢光處可以更改齒數\u0006，可以依照需求劃出相配對的齒輪，謝謝同學教我如何上傳 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform","title":"40323122 期末報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323122-qi-mo-bao-gao.html"},{"tags":"ag2","text":"啟動 cdw13 協同專案 心得: 在做這份課程，遇到好多問題!謝謝同學教我!!!使我明白我不了解的地方。 eighteenthirty (藍色) 轉成90度後 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform","title":"40323122 cdw13 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323122-cdw13-bao-gao.html"},{"tags":"ag2","text":"啟動 cdw11 協同專案 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖: 心得:經過這次的課程，讓我知道自行車鏈條的應用，利用協同讓大家一起做。也感謝幫忙我的同學!!!讓我獲益良多。 A4 BADC abcd pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform","title":"40323122 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323122-cdw11-bao-gao.html"},{"tags":"ag2","text":"期末報告 報告內容: 前言: 利用2D繪圖程式繪製出4個A、BACD及ABCD 任務描述及執行說明: 任務一(繪製出四個A): 首先在下圖圈起來地方的位置註冊藍圖及導入 再來將2D繪圖程式打開，在要繪圖的資料夾底下輸入python wsgi.py執行 若是開啟成功，會出現上圖的圖示，若是失敗的話則會出現哪裡有錯誤，這個要再去找看看是哪裡出錯。 在網頁輸入localhost:5000/下圖圈起來的位置1./位置2. 開啟之後會出現在這個位置底下的東西 再來要說明如何繪製字母A，首先可以自行繪製，也可以從老師給的參數直接拿過來使用， 接下來要說明的是如何從老師給的參數直接導入繪製出字母A、B、C及D 可以從班級cdw2中取得這些參數，再將這些參數導入，而位置cdw2中的users底下的s2a中的g100裏頭的scrum1_task1.py然後用編輯器打開來 複製a函式的參數，然後貼到自己位置的底下，記得要加上html的語法才可以跑出圖形，不然會只有文字檔而已 html語法 導入成功之後 接著再重複導入A函式，更改一下座標軸，紅色底線部分為座標軸的參數 導入四次A函式之後，及用座標軸調整之間的距離 完成! 任務二(依序排列BACD): 根據上面導入A函式的方法，只是換成導入B、C及D函式而已 只是需要注意到的地方是導入的B函式的參數要更動一下 更動位置如下圖 原本函式在圈起來的地方為0+65，要改成0 改成0之後，所顯示的字母B的起始位置會在原點 之後再依序導入A、C、D函式，再調整一下座標位置 完成! 任務三(由上到下排序ABCD): 依照上面所講的方法，再導入A、B、C及D函式，調整位置就可以完成了 結果說明: 如何繪製出字母A是靠a函式裏頭的很多X、Y軸的參數，經過數學的運算，才會顯示出字母A的形狀，可是我們直接用導入的可能會無法理解裏頭的X、Y的參數更改的話，到底是影響到甚麼地方，這個是我們可以去思考的地方。 其實除了用到座標軸參數去排列以外，也可以去更改它的鍊條顏色，只要在下圖的地方改成你要的顏色就可以了。 心得: pelican 網誌位置: http://cdw11-2014w11.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform","title":"40323117 cdw11 期末報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323117-cdw11-qi-mo-bao-gao.html"},{"tags":"ag10","text":"啟動 cdw17 協同專案 期末報告內容: 任務描述及說明: 1.繪出2D齒輪嚙合.2D鍊條: 2D齒輪嚙合 http://403231410618-40323141.rhcloud.com/ag10_40323141_1/gears 2D鍊條 http://403231410618-40323141.rhcloud.com/ag10_40323141_1/eighteenthirty 2.繪出3D嚙合齒輪: 同齒: https://cad.onshape.com/documents/ccce85d505680ae7ad572129/w/be216c03dd13d4bfcff5c3d1/e/2081e3d30395360c4a7087ed 不同齒: https://cad.onshape.com/documents/ccce85d505680ae7ad572129/w/be216c03dd13d4bfcff5c3d1/e/e0309942ab1701c60b3a70a7 先到onshape網址(https://cad.onshape.com/documents) 新建一個Part Studio 將底板繪製出來 再開啟一個Part Studio把齒輪叫出來 點右上角的[+] 再點如下圖的零件 這時候右上角會有SG 點下去齒輪就可以叫出來了 之後可以更改齒輪模數.齒數等 再叫出兩個齒輪 如上面步驟 最後開起組合圖 將他接上去 最後調整他們的Relation ratio 就可以嚙合了 心得:一開始聽到要使用onshape來將齒輪嚙合時覺得很困難、很複雜， 但實際操作起來發現其實只是將齒輪叫出來，再去計算他的模數、齒數、直徑等， 就可以模擬出嚙合齒輪，在計算時是真的有點複雜，不過多做幾次就會相當熟練了。 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform","title":"40323141 cdw17 期末報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323141-cdw17-qi-mo-bao-gao.html"},{"tags":"ag10","text":"期末報告內容: 敘述: 2D鏈條組立、2D正齒輪囓合和 在Onshape上繪3D齒輪囓合 作業1. 繪出2D鍊條組立(18.30齒): 轉90度後 說明轉成直立的2D鍊條組立: 作業2. 繪出2D齒輪嚙合 2D齒輪嚙合說明: 作業3. 繪出Onshape 3D齒輪嚙合 2齒輪同齒 4齒輪不同齒 齒輪作法與步驟說明 心得: 這次的2D鏈條組立和2D鍊條嚙合以及Onshape3D齒輪嚙合，感覺越做越上手了，一開始以為這是個非常難的課程，當有花時間下去實際操作，就知道從哪裡下去操作，像這次的Onshape3D齒輪嚙合，一開始還必須先去把齒輪的指令給叫出來，會顯示SG，之後才能開始建立齒輪，但是在做齒輪嚙合的時候不知道為甚麼齒輪都會一直干涉，兩個齒輪都無法嚙合起來，好幾次下課都留下來詢問老師如何操作，在老師講解下，才慢慢開始懂得Onshape3D齒輪該如何讓他嚙合，原來是偏轉角的問題，偏轉角在齒輪嚙合裡面佔了非常重，當偏轉角設定完後也要記得改兩個齒輪的齒數比，才可以讓齒輪完整嚙合，這次的課程讓我學到了許多，希望之後用到的話還能記得。 自評 : 75","title":"40323139 cdw17 期末報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323139-cdw17-qi-mo-bao-gao.html"},{"tags":"ag10","text":"啟動 cdw17 協同專案 期末報告內容: 完成網際2D鏈條組立、2D齒輪囓合及Onshape的3D齒輪囓合 1.繪出2D齒輪 http://40323130-40323130.rhcloud.com/ag4_40323130/gear 2.利用onshape繪出3D嚙合齒輪 https://cad.onshape.com/documents/c9bdd23548ca28ad1ef100f1/w/84398cf20a6fc97c2228415b/e/fc0a49db66732cf89c548d75 繪製同齒齒輪囓合: 齒數為30齒,模數為1 繪製不同齒齒輪囓合: 一個為20齒,一個為40齒，模數皆為1 繪製4顆不同齒齒輪囓合: 一個為20齒，一個為40齒，一個為60齒，一個為80齒，模數皆為1 心得: 齒輪是多麼奇妙的東西啊，只要是不同齒型不同模數就無法嚙合，尤其是主動輪跟被動輪的關係最為重要，主動輪就像老師一樣而被動輪就像學生，老師帶著學生做著他該做的工作，主動輪比較大而被動輪比較小，就像老師只要走一步就能完成而學生需要經過多步練習才能有一樣的成效，這是我在這次齒輪報告所學到的東西。 自評分數:70","title":"40323128 cdw17 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323128-cdw17-bao-gao.html"},{"tags":"ag10","text":"啟動 cdw17 協同專案 期末報告內容: 完成網際2D鏈條組立、2D齒輪囓合及Onshape的3D齒輪囓合 1.繪出2D齒輪 http://40323130-40323130.rhcloud.com/ag4_40323130/gear 2.利用onshape繪出3D嚙合齒輪 繪製同齒齒輪囓合: https://cad.onshape.com/documents/c415c233172fd0450fddec4f/w/23e8529cd1f33733fa141d9e/e/a9a9931fcfe4e6254c7da094 齒數為20齒,模數為1 繪製不同齒齒輪囓合: 一個為20齒,一個為40齒，模數皆為1 繪製4顆不同齒齒輪囓合: 心得:從一開始到現在期末了,開始更會使用上課所教的程式了,這學期有接觸2D跟3D的繪圖,剛開始操作上也是處處碰壁,要用一些約束或是想要使用一些功能都找不到也很難應用,不過好險後來一直反覆的操作後已經算是很熟練,有問題也都盡快地去問同學,到現在也終於把東西都做出來了,也算是很充實的一堂課,學到並且熟練的去操作每一個步驟。 自評分數:70","title":"40323127 cdw17 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323127-cdw17-bao-gao.html"},{"tags":"ag10","text":"1.繪出2D齒輪 http://cdw13-40323105.rhcloud.com/a40323105/ag1_2D 2.繪出3D嚙合齒輪 先打spur gear讓齒輪指令產生 在工具列顯示SG 第一個 ---同齒 : 齒數為25齒,模數為1 https://cad.onshape.com/documents/8827097414b62d32fc7a31da/w/6e1d74265a51b8a548586977/e/a03afc8eb7c54ff8ed6b1f5d 第二個 --- 不同齒 : 一個為25齒,一個為35齒 https://cad.onshape.com/documents/814862e64fb51eca7068379c/w/f82844ec6b1f4db66c10a763/e/59cdf10611af88e2eee85da5 第三個 --- 4顆齒輪 : https://cad.onshape.com/documents/57626c40e4b0abf5b58b2787/w/bfb400d2525c9d2abcf372d8/e/b2ea1856a2f7a8cd8e193078 心得:期末老師教了我們用onshape畫齒輪囓合我們有畫同齒，不同齒，還有四顆齒輪的囓合，增加了許多機械知識，也有用程式畫2D齒輪，學了這一門課，不管在任何地方，只要有網路和電腦就可以畫圖，就不用在靠軟體畫圖，那一些的。 自評分數:70分","title":"40323115     final 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323115-final-bao-gao.html"},{"tags":"ag1","text":"Leo架構部分 1.如圖所示 2.建立畫布 3.註冊 齒輪及鍊條部分 1.繪出2D齒輪 2.繪出3D嚙合齒輪 先打spur gear讓齒輪指令產生 出現SG圖示 在工具列顯示SG 第一個 ---同齒 : 齒數為25齒,模數為1 第二個 --- 不同齒 : 一個為25齒,一個為35齒 Tooth angle 必須要調整,不然在嚙合時會發生干涉 第三個 --- 四齒嚙合 將齒數設定為10齒,20齒,25齒,35齒~ 設定完齒數後組裝 組裝完之後要調整tooth angle ,並調整轉向就OK了 鍊條繪製 心得： 自評：75","title":"40323148   期末報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323148-qi-mo-bao-gao.html"},{"tags":"ag1","text":"齒輪及鍊條部分 1.繪出2D齒輪 http://cdw13-40323105.rhcloud.com/a40323105/ag1_2D 2.一個3D齒輪 第一個 ---同齒 : 齒數為35齒，模數為2 https://cad.onshape.com/documents/3ec3d1e09fd2797df54823a6/w/96b0e8721faaee108fe3e180/e/75c77b9d8a85ab359f52d1ce 底板 齒輪 齒輪嚙合 第二個 --- 不同齒 : 一個為30齒，一個為70齒，模數為2 https://cad.onshape.com/documents/721ab66ca2fec8b457735a79/w/c284c35096b1c8569bea9826/e/2709a7bda1ab0bc1bd182785 底座 齒輪30齒 齒輪70齒 齒輪嚙合 第三個 --- 三齒嚙合 將齒數設定為25齒，35齒，50齒，模數為4 https://cad.onshape.com/documents/bf6d8a4004c53d0b7824bb46/w/1735f8ee7ea8ff94a64f9baa/e/c2004d8dacf3244654c0e146 底座 齒輪25齒 齒輪35齒 齒輪50齒 齒輪嚙合 第四個2D齒輪 第五個2D鍊條 心得： 這次要繪出2D鍊條以及2D、3D齒輪,而2D齒輪我複製老師的程式碼,在每個齒輪中間都繪有一條顏色為GOLD的橫線,寬度為1。在齒輪3D的部分,首先摸索單個齒輪的成形，再來做兩個相同齒數的齒輪組裝及嚙合，到兩個不相同的數嚙合時，需要考慮中心距和齒數的關係比，在三個齒輪轉動配合時發現需要調整齒數比和旋轉方向，讓齒輪有合理的轉速和方向。 註冊畫布時要記住自己的名稱，不然怎麼打進去的網頁都是404。 自評：70","title":"40323146 期末報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323146-qi-mo-bao-gao.html"},{"tags":"ag1","text":"自評分數:70","title":"40323107  總整理","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323107-zong-zheng-li.html"},{"tags":"ag1","text":"onshape繪圖 1.同齒 https://cad.onshape.com/documents/70892abe9d93f8ea64bbabfa/w/d5350e78ec7cc5f496c73877/e/9583c554da2987b836d53f1f 2.不同齒 3.四齒嚙合 心得 : 經過這一學期的課程，了解和同學利用雲端協同設計鏈條齒輪的方便，可以隨即更改資料，不需要見面傳遞USB，也不用因為時間不允許無法討論。 在用onshape設計齒輪時，一直遇到干涉，與以往熟悉的製圖軟體不同的是，齒輪間的配合，之前所了解的都是在齒面下相切指令，onshape是調齒輪的偏移，超磨耗耐心的~~不過最後做出來很有成就感!!! 自評分數:65","title":"40323106   final報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323106-finalbao-gao.html"},{"tags":"bg9","text":"期末報告 (統整) 鍊條上30下18齒 從老師的18及30齒中，找到eighteenthirty 或是 其他程式拿來修改，我是用eighteenthirty，然後將兩部分的鏈條分開，並定位到(0,0)位置，就可以開始計算需要移動的距離，就可以很容易的接合，但是修改容易寫程式難，還是要想辦法搞懂程式才行。 2D齒輪嚙合 @bg9_40323250.route('/gear_50') def gear_50(): outstring = ''' <!DOCTYPE html> <html> <head> <meta charset=\"UTF-8\"> <title>網際 2D 繪圖</title> <!-- IE 9: display inline SVG --> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=9\"> <script type=\"text/javascript\" src=\"http://brython.info/src/brython_dist.js\"></script> <script type=\"text/javascript\" src=\"http://2015fallhw.github.io/cptocadp/static/Cango-8v03.js\"></script> <script type=\"text/javascript\" src=\"http://2015fallhw.github.io/cptocadp/static/Cango2D-7v01-min.js\"></script> <script type=\"text/javascript\" src=\"http://2015fallhw.github.io/cptocadp/static/gearUtils-05.js\"></script> <script> window.onload=function(){ brython(1); } </script> <canvas id='gear1' width='800' height='750'></canvas> <script type=\"text/python\"> # 將 導入的 document 設為 doc 主要原因在於與舊程式碼相容 from browser import document as doc # 由於 Python3 與 Javascript 程式碼已經不再混用, 因此來自 Javascript 的變數, 必須居中透過 window 物件轉換 from browser import window # 針對 Javascript 既有的物件, 則必須透過 JSConstructor 轉換 from javascript import JSConstructor import math # 主要用來取得畫布大小 canvas = doc[\"gear1\"] # 此程式採用 Cango Javascript 程式庫繪圖, 因此無需 ctx #ctx = canvas.getContext(\"2d\") # 針對類別的轉換, 將 Cango.js 中的 Cango 物件轉為 Python cango 物件 cango = JSConstructor(window.Cango) # 針對變數的轉換, shapeDefs 在 Cango 中資料型別為變數, 可以透過 window 轉換 shapedefs = window.shapeDefs # 目前 Cango 結合 Animation 在 Brython 尚無法運作, 此刻只能繪製靜態圖形 # in CangoAnimation.js #interpolate1 = window.interpolate # Cobi 與 createGearTooth 都是 Cango Javascript 程式庫中的物件 cobj = JSConstructor(window.Cobj) creategeartooth = JSConstructor(window.createGearTooth) # 經由 Cango 轉換成 Brython 的 cango, 指定將圖畫在 id=\"plotarea\" 的 canvas 上 cgo = cango(\"gear1\") ###################################### # 畫正齒輪輪廓 ##################################### def spur(cx, cy, m, n, pa, theta): # n 為齒數 #n = 17 # pa 為壓力角 #pa = 25 # m 為模數, 根據畫布的寬度, 計算適合的模數大小 # Module = mm of pitch diameter per tooth #m = 0.8*canvas.width/n # pr 為節圓半徑 pr = n*m/2 # gear Pitch radius # generate gear data = creategeartooth(m, n, pa) # Brython 程式中的 print 會將資料印在 Browser 的 console 區 #print(data) gearTooth = cobj(data, \"SHAPE\", { \"fillColor\":\"#ddd0dd\", \"border\": True, \"strokeColor\": \"#606060\" }) #gearTooth.rotate(180/n) # rotate gear 1/2 tooth to mesh, 請注意 rotate 角度為 degree # theta 為角度 gearTooth.rotate(theta) # 單齒的齒形資料經過旋轉後, 將資料複製到 gear 物件中 gear = gearTooth.dup() # gear 為單一齒的輪廓資料 #cgo.render(gearTooth) # 利用單齒輪廓旋轉, 產生整個正齒輪外形 for i in range(1, n): # 將 gearTooth 中的資料複製到 newTooth newTooth = gearTooth.dup() # 配合迴圈, newTooth 的齒形資料進行旋轉, 然後利用 appendPath 方法, 將資料併入 gear newTooth.rotate(360*i/n) # appendPath 為 Cango 程式庫中的方法, 第二個變數為 True, 表示要刪除最前頭的 Move to SVG Path 標註符號 gear.appendPath(newTooth, True) # trim move command = True # 建立軸孔 # add axle hole, hr 為 hole radius hr = 0.6*pr # diameter of gear shaft shaft = cobj(shapedefs.circle(hr), \"PATH\") shaft.revWinding() gear.appendPath(shaft) # retain the 'moveTo' command for shaft sub path gear.translate(cx, cy) # render 繪出靜態正齒輪輪廓 cgo.render(gear) # 接著繪製齒輪的基準線 deg = math.pi/180 Line = cobj(['M', cx, cy, 'L', cx+pr*math.cos(theta*deg), cy+pr*math.sin(theta*deg)], \"PATH\", { 'strokeColor':'blue', 'lineWidth': 1}) cgo.render(Line) # 3個齒輪的齒數 n1 = 10 n2 = 12 n3 = 14 n4 = 16 # m 為模數, 根據畫布的寬度, 計算適合的模數大小 # Module = mm of pitch diameter per tooth # 利用 80% 的畫布寬度進行繪圖 # 計算模數的對應尺寸 m = canvas.width*0.8/(n1+n2+n3+n4) # 根據齒數與模組計算各齒輪的節圓半徑 pr1 = n1*m/2 pr2 = n2*m/2 pr3 = n3*m/2 pr4 = n4*m/2 # 畫布左右兩側都保留畫布寬度的 10% # 依此計算對應的最左邊齒輪的軸心座標 cx = canvas.width*0.1+pr1 cy = canvas.height/2 # pa 為壓力角 pa = 25 # 畫布左右兩側都保留畫布寬度的 10% # 依此計算對應的最左邊齒輪的軸心座標 cx = canvas.width*0.1+pr1 cy = canvas.height/2 # pa 為壓力角 pa = 25 # 畫最左邊齒輪, 定位線旋轉角為 0, 軸心座標 (cx, cy) spur(cx, cy, m, n1, pa, 0) # 第2個齒輪將原始的定位線逆時鐘轉 180 度後, 與第1個齒輪正好齒頂與齒頂對齊 # 只要第2個齒輪再逆時鐘或順時鐘轉動半齒的角度, 即可完成囓合 # 每一個齒分別包括從齒根到齒頂的範圍, 涵蓋角度為 360/n, 因此所謂的半齒角度為 180/n spur(cx+pr1+pr2, cy, m, n2, pa, 180-180/n2) # 第2齒與第3齒的囓合, 首先假定第2齒的定位線在 theta 角為 0 的原始位置 # 如此, 第3齒只要逆時鐘旋轉 180 度後, 再逆時鐘或順時鐘轉動半齒的角度, 即可與第2齒囓合 # 但是第2齒為了與第一齒囓合時, 已經從原始定位線轉了 180-180/n2 度 # 而當第2齒從與第3齒囓合的定位線, 逆時鐘旋轉 180-180/n2 角度後, 原先囓合的第3齒必須要再配合旋轉 (180-180/n2 )*n2/n3 spur(cx+pr1+pr2+pr2+pr3, cy, m, n3, pa, 180-180/n3+(180-180/n2)*n2/n3) spur(cx+pr1+pr2+pr2+pr3+pr3+pr4, cy, m, n4, pa, 180-180/n3*n3/n4+(180-180/n2)*n2/n3*n3/n4+(180-180/n3)*n3/n4) </script> <script type='text/javascript'> var onWebChat={ar:[], set: function(a,b){if (typeof onWebChat_==='undefined'){this.ar. push([a,b]);}else{onWebChat_.set(a,b);}},get:function(a){return(onWebChat_.get(a));},w :(function(){ var ga=document.createElement('script'); ga.type = 'text/javascript';ga. async=1;ga.src='//www.onwebchat.com/clientchat/795d781612868f02aa4bb0552c0655a5/1/1'; var s=document.getElementsByTagName('script')[0];s.parentNode.insertBefore(ga,s);})()} </script> </body> </html> ''' return outstring 完成圖 gear_relations 心得 期中以後，以程式繪圖的方法大概弄懂了，Onshape也開放了feature studio，畫圖的方式也近似於我們的畫法，還可以設定變數，現在連齒輪都能直接呼叫了。 creo 2.0 已經正式被放棄，隨著時代的進步，我們要有更強的能力，而不是原地踏步","title":"40323250 期末報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323250-qi-mo-bao-gao.html"},{"tags":"bg9","text":"cdw13內容規畫 : 將老師的鏈條轉90度 構想 : 將老師的eighteenthirty的起始角度轉90度之後，會有兩部分分開，只要將兩個圖形都定位到(0, 0)後，找到重疊的部分，再利用三角函數算出座標點差距，就可以接再一起了 完成圖:","title":"40323250 cdw13報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323250-cdw13bao-gao.html"},{"tags":"bg9","text":"cdw11內容規畫 : 利用老師開放之鍊條程式碼，嘗試做出兩個鍊條，並能透過6個參數調整外角、x座標及y座標。 完成圖:","title":"40323250 cdw11報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323250-cdw11bao-gao.html"},{"tags":"bg9","text":"cdw11 編輯","title":"40323231 cdw11報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323231-cdw11bao-gao.html"},{"tags":"bg9","text":"編輯","title":"40323230 W11內容","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323230-w11nei-rong.html"},{"tags":"bg9","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40323218 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323218-cdw11-bao-gao.html"},{"tags":"bg8","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40323229 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323229-cdw11-bao-gao.html"},{"tags":"bg8","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40323213 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323213-cdw11-bao-gao.html"},{"tags":"bg5","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 1.編輯LEO。 區域介紹 2.建立py檔。 1.Ctrl+I 建立一個新的newHeadline。 2.將newHeadline改成@edit 檔名.py,記得前面不能是數字。 3.程式編輯好後，將edit改為auto並按右鍵選取Refresh from disk。 4.完成排版後再將auto改為clean儲存。 5.在近端執行python wsgi.py檢視畫布。 3.建立OPENSHIFT。 呈現個人畫布所用 4.建立CDW11鑰匙。 可使用老師給的鑰匙,管理較為方便 5.利用程式編輯，將水平鍊條改為垂直鍊條。 http://cdw11-40323253.rhcloud.com/bg5_40323253_1/eighteenthirty 6.solvespace繪製鍊條。 7.齒輪鍊條繪製。 http://cdw11-40323253.rhcloud.com/bg5_40323253_2/a 8.期末心得報告。 期中報告以後，我們開始往齒輪鍊條的方向前進，抓取老師給的程式進行編輯，我們必須考慮齒輪及鍊條的干涉和衝突，可利用solvespace畫圖計算數值，甚至以數學的方式取得精準的點位。編輯LEO方面，和期中類似，但是cdw11後的Github老師要求全班加為協同者，直接在Master進行協同，這樣我們的編輯將變得困難，我們必須排除同學們的各種衝突才能順利完成任務，若遠端被搞亂了我們也無法在遠端進行檢測，於是我們這組另外創了屬於我們g5組別的Github倉儲進行測試，此方法大大減低出錯的機率，且使任務進行的更加流暢。 自評 : 83分","title":"40323253 期末報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323253-qi-mo-bao-gao.html"},{"tags":"bg5","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40323206 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323206-cdw11-bao-gao.html"},{"tags":"bg5","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/blog/40323204-cdw11-bao-gao.html 心得及自評: 自評成績90分 在這幾週的課程中學了很多，如何建立openshift或是利用程式繪製圖形，雖然對於組員間的協同繪製英文字母還是不懂，像是第一個繪製英文字母的作業，在繪製上沒問題，但如果要用到組員合作協同的話，就完全沒有頭緒。 第二個作業繪製垂直鍊條，一開始不知道如改成垂直，但了解程式後發現其實很簡單，角度加90之後，其他的數字改一下就可對其了。 第三個作業2D 正齒輪傳動囓合繪圖，我複製了老師的成績後，多加了一個齒輪以及改了顏色，把它存成html檔就完成了，其中最後要結合的角度計算方式最複雜難懂，其餘的都很簡單。 第四個作業網際 3D 正齒輪傳動模擬，這個作業要使用Onshape繪製，經過同學的教導後，我也依照同樣的方法繪製出來了，並且利用截圖說明了過程，自己會使用後覺得很方便，齒輪間的結合可以模擬出來，覺得現在的網路工具越來越強了。 Leo Editor 基本的使用: 1.開啟 Leo Editor 後, 使用者可以新增一個 .leo 檔案, 並在其中加入節點，以及在節點的內文中輸入資料。 2.當節點名稱為@edit _____.md時，即為網誌檔，其內文可打資料，傳會後會顯示在網頁上。 3.當節點名稱為@edit ____.py時，即為python檔，若想讓.py檔裡的程式分節，就將 edit 改為 auto，在檔名的位置點滑鼠右鍵選擇Refresh from disk就會自動分節，再將 auto改為 clean就完成。 4.@path content/b/g5即為檔案存取到 content下的 b下的 g5 。 5.程式中bg5_40323204_2 = Blueprint('bg5_40323204_2', name , url_prefix='/bg5_40323204_2', template_folder='templates') 此行為定義藍圖名稱 6.若要在近端實行就輸入 python wsgi.py當跑出三行有*字號的文字即為成功，若沒有成功可看@clean myflaskapp.py或myflaskapp declarations 中是否有定義到自己的檔案或藍圖，也有可能是別人的定義錯誤，可在錯誤的定義前面加一個#字號暫時蓋掉，完成後再輸入一次python wsgi.py即可。. 7.當近端跑成功後可在網頁網址中輸入 localhost:5000/檔案位置/藍圖名稱/繪圖所定義的名稱。 2D英文字母繪製: AAAA: http://cdw11g5-40323204sandy.rhcloud.com/bg5_40323204/task04_1 BACD: http://cdw11g5-40323204sandy.rhcloud.com/bg5_40323204/task04_2 ABCD: http://cdw11g5-40323204sandy.rhcloud.com/bg5_40323204/task04_3 自行車傳動 2D 鏈條繪圖: 計算鍊條點的位置: 利用solvespace繪圖計算鍊條點的位置在帶入程式中 欲將鍊條改為垂直，將first_degree都加上90，X與Y的部分做算並填上即可。 垂直鍊條: http://cdw11g5-40323204sandy.rhcloud.com/bg5_40323204_1/eighteenthirty1 2D 正齒輪傳動囓合繪圖: 齒輪嚙合程式: window.onload=function(){ brython(1); } # 將 導入的 document 設為 doc 主要原因在於與舊程式碼相容 from browser import document as doc # 由於 Python3 與 Javascript 程式碼已經不再混用, 因此來自 Javascript 的變數, 必須居中透過 window 物件轉換 from browser import window # 針對 Javascript 既有的物件, 則必須透過 JSConstructor 轉換 from javascript import JSConstructor import math # 主要用來取得畫布大小 canvas = doc[\"gear1\"] # 此程式採用 Cango Javascript 程式庫繪圖, 因此無需 ctx #ctx = canvas.getContext(\"2d\") # 針對類別的轉換, 將 Cango.js 中的 Cango 物件轉為 Python cango 物件 cango = JSConstructor(window.Cango) # 針對變數的轉換, shapeDefs 在 Cango 中資料型別為變數, 可以透過 window 轉換 shapedefs = window.shapeDefs # 目前 Cango 結合 Animation 在 Brython 尚無法運作, 此刻只能繪製靜態圖形 # in CangoAnimation.js #interpolate1 = window.interpolate # Cobi 與 createGearTooth 都是 Cango Javascript 程式庫中的物件 cobj = JSConstructor(window.Cobj) creategeartooth = JSConstructor(window.createGearTooth) # 經由 Cango 轉換成 Brython 的 cango, 指定將圖畫在 id=\"plotarea\" 的 canvas 上 cgo = cango(\"gear1\") ###################################### # 畫正齒輪輪廓 ##################################### def spur(cx, cy, m, n, pa, theta): # n 為齒數 #n = 17 # pa 為壓力角 #pa = 25 # m 為模數, 根據畫布的寬度, 計算適合的模數大小 # Module = mm of pitch diameter per tooth #m = 0.8*canvas.width/n # pr 為節圓半徑 pr = n*m/2 # gear Pitch radius # generate gear data = creategeartooth(m, n, pa) # Brython 程式中的 print 會將資料印在 Browser 的 console 區 #print(data) gearTooth = cobj(data, \"SHAPE\", { \"fillColor\":\"#660099\", \"border\": True, \"strokeColor\": \"#cc9933\" }) #gearTooth.rotate(180/n) # rotate gear 1/2 tooth to mesh, 請注意 rotate 角度為 degree # theta 為角度 gearTooth.rotate(theta) # 單齒的齒形資料經過旋轉後, 將資料複製到 gear 物件中 gear = gearTooth.dup() # gear 為單一齒的輪廓資料 #cgo.render(gearTooth) # 利用單齒輪廓旋轉, 產生整個正齒輪外形 for i in range(1, n): # 將 gearTooth 中的資料複製到 newTooth newTooth = gearTooth.dup() # 配合迴圈, newTooth 的齒形資料進行旋轉, 然後利用 appendPath 方法, 將資料併入 gear newTooth.rotate(360*i/n) # appendPath 為 Cango 程式庫中的方法, 第二個變數為 True, 表示要刪除最前頭的 Move to SVG Path 標註符號 gear.appendPath(newTooth, True) # trim move command = True # 建立軸孔 # add axle hole, hr 為 hole radius hr = 0.6*pr # diameter of gear shaft shaft = cobj(shapedefs.circle(hr), \"PATH\") shaft.revWinding() gear.appendPath(shaft) # retain the 'moveTo' command for shaft sub path gear.translate(cx, cy) # render 繪出靜態正齒輪輪廓 cgo.render(gear) # 接著繪製齒輪的基準線 deg = math.pi/180 Line = cobj(['M', cx, cy, 'L', cx+pr*math.cos(theta*deg), cy+pr*math.sin(theta*deg)], \"PATH\", { 'strokeColor':'blue', 'lineWidth': 1}) cgo.render(Line) # 3個齒輪的齒數 n1 = 17 n2 = 29 n3 = 15 n4 = 39 # m 為模數, 根據畫布的寬度, 計算適合的模數大小 # Module = mm of pitch diameter per tooth # 利用 80% 的畫布寬度進行繪圖 # 計算模數的對應尺寸 m = canvas.width*0.8/(n1+n2+n3+n4) # 根據齒數與模組計算各齒輪的節圓半徑 pr1 = n1*m/2 pr2 = n2*m/2 pr3 = n3*m/2 pr4 = n4*m/2 # 畫布左右兩側都保留畫布寬度的 10% # 依此計算對應的最左邊齒輪的軸心座標 cx = canvas.width*0.1+pr1 cy = canvas.height/2 # pa 為壓力角 pa = 25 # 畫最左邊齒輪, 定位線旋轉角為 0, 軸心座標 (cx, cy) spur(cx, cy, m, n1, pa, 0) # 第2個齒輪將原始的定位線逆時鐘轉 180 度後, 與第1個齒輪正好齒頂與齒頂對齊 # 只要第2個齒輪再逆時鐘或順時鐘轉動半齒的角度, 即可完成囓合 # 每一個齒分別包括從齒根到齒頂的範圍, 涵蓋角度為 360/n, 因此所謂的半齒角度為 180/n spur(cx+pr1+pr2, cy, m, n2, pa, 180-180/n2) # 第2齒與第3齒的囓合, 首先假定第2齒的定位線在 theta 角為 0 的原始位置 # 如此, 第3齒只要逆時鐘旋轉 180 度後, 再逆時鐘或順時鐘轉動半齒的角度, 即可與第2齒囓合 # 但是第2齒為了與第一齒囓合時, 已經從原始定位線轉了 180-180/n2 度 # 而當第2齒從與第3齒囓合的定位線, 逆時鐘旋轉 180-180/n2 角度後, 原先囓合的第3齒必須要再配合旋轉 (180-180/n2 )*n2/n3 spur(cx+pr1+pr2+pr2+pr3, cy, m, n3, pa, 180-180/n3+(180-180/n2)*n2/n3) spur(cx+pr1+pr2+pr2+pr3+pr3+pr4, cy, m, n4, pa, 180-180/n4) 網際 3D 正齒輪傳動模擬: Onshape齒輪繪製網址: https://cad.onshape.com/documents/62acae18224e677f2927970c/w/f54d41bf511577881863e911/e/2f5927f6835a9194a0e62cd2 過程介紹: 新增齒輪方法 1.點選螢光筆畫的地方 2.點下去後會跑出一個視窗，在搜尋處輸入spur會跑出許多選項，按下第一個紅筆圈起來處的選項 3.按下後會跑出下圖的樣子，按下螢光筆畫起來處 4.跑完後點選視窗右上角的SG 5.點下後會出現下圖視窗，可在視窗中設定齒數、模數，紅筆圈起來處是指齒輪中間的孔，點選後可更改孔直徑 齒輪組合方法 1.依照齒輪組合後的位置關係，繪製出底板 2.進入組合圖叫出底板，步驟如下圖 3.按下確定後，要將底板與組合圖中心固定在一起，點選螢光筆繪製處 4.選擇中心處的面與底板的面，結合後按下確定即可 5.一樣的方法叫出齒輪一 6.點選上排旋轉結合按鈕，並加底板的軸與齒輪的孔結合 7.相同的方法叫出齒輪二並與底板結合 8.欲將兩齒輪結合在一起，點選上排兩個齒輪的圖案 9.跳出視窗後選取齒輪一與齒輪二的結合選項，如圖 10.將螢光筆繪製處改為:齒數二/齒數一 11.結合後如下圖，界下來以此類推 成果圖片: 齒輪一設置(齒數30，模數2) 齒輪二設置(齒數20，模數2) 齒輪三設置(齒數10，模數2) 齒輪四設置(齒數25，模數2) 齒輪一與二的結合 齒輪一與三的結合 齒輪二與四的結合 組合完成圖","title":"40323204 cdw11 期末心得報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323204-cdw11-qi-mo-xin-de-bao-gao.html"},{"tags":"bg4","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40323208 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323208-cdw11-bao-gao.html"},{"tags":"bg4","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40323205 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323205-cdw11-bao-gao.html"},{"tags":"bg4","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40323203 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323203-cdw11-bao-gao.html"},{"tags":"bg4","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40323202 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323202-cdw11-bao-gao.html"},{"tags":"bg4","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40323201 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323201-cdw11-bao-gao.html"},{"tags":"bg4","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40123128 cdw11 報告-1","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123128-cdw11-bao-gao-1.html"},{"tags":"bg4","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40123128 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123128-cdw11-bao-gao.html"},{"tags":"bg3","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40123250 cdw11 報告-1","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123250-cdw11-bao-gao-1.html"},{"tags":"bg3","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40123250 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123250-cdw11-bao-gao.html"},{"tags":"g3","text":"啟動 cdw13 協同專案 結果","title":"40123242 cdw13 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123242-cdw13-bao-gao.html"},{"tags":"g3","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40123242 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123242-cdw11-bao-gao.html"},{"tags":"bg3","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40123239 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123239-cdw11-bao-gao.html"},{"tags":"bg3","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40123224 cdw11 報告-1","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123224-cdw11-bao-gao-1.html"},{"tags":"bg3","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40123224 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123224-cdw11-bao-gao.html"},{"tags":"bg2","text":"啟動 cdw13 協同專案 cdw13心得 大致修改上述座標點,X和Y軸及起始旋轉角度 成果圖","title":"40123244 cdw13 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123244-cdw13-bao-gao.html"},{"tags":"bg2","text":"啟動 cdw11 協同專案 cdw11心得 先註冊藍圖及導入 使用老師及同學提供及修改過的ABCD程式來達成此次練習 練習1:4A 直接以老師的原本程式的A來使用 修改起始坐標後來呈現 如圖 每個A距離都取等距移動 最後1個A沒取等距因為會超出畫布範圍 完成後須先在近端執行可否運作 接下來BACD及從上到下ABCD都是相似作法 成果: 4A 網誌位置: http://python2-40123244.rhcloud.com/bg2_40123244/task4a BACD網誌位置: http://python2-40123244.rhcloud.com/bg2_40123244/taskbacd 上下ABCD網誌位置: http://python2-40123244.rhcloud.com/bg2_40123244/taskabcd","title":"40123244 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123244-cdw11-bao-gao.html"},{"tags":"bg2","text":"啟動 cdw13 協同專案 cdw13心得 大致修改上述座標點,X和Y軸及起始旋轉角度 成果圖","title":"40123235 cdw13 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123235-cdw13-bao-gao.html"},{"tags":"bg2","text":"啟動 cdw11 協同專案 cdw11心得 先註冊藍圖及導入 使用老師及同學提供及修改過的ABCD程式來達成此次練習 練習1:4A 直接以老師的原本程式的A來使用 修改起始坐標後來呈現 如圖 每個A距離都取等距移動 最後1個A沒取等距因為會超出畫布範圍 完成後須先在近端執行可否運作 接下來BACD及從上到下ABCD都是相似作法 成果: 4A 網誌位置: http://40123235bg2-cadp13ag35.rhcloud.com/bg2_40123235/task4a BACD網誌位置: http://40123235bg2-cadp13ag35.rhcloud.com/bg2_40123235/taskbacd 上下ABCD網誌位置: http://40123235bg2-cadp13ag35.rhcloud.com/bg2_40123235/taskabcd","title":"40123235 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123235-cdw11-bao-gao.html"},{"tags":"bg2","text":"啟動 cdw13 協同專案 cdw13心得 大致修改座標點,及起始旋轉角度","title":"40123232 cdw13 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123232-cdw13-bao-gao.html"},{"tags":"bg2","text":"啟動 cdw11 協同專案 cdw11心得 先註冊藍圖及導入 使用老師及同學提供及修改過的ABCD程式來達成此次練習 練習1:4A 直接以老師的原本程式的A來使用 修改起始坐標後來呈現 如圖 完成後須先在近端執行可否運作 接下來BACD及從上到下ABCD都是相似作法 成果: 4A 網誌位置: http://cdw2g2-40123232.rhcloud.com/bg2_40123232/task4a BACD網誌位置: http://cdw2g2-40123232.rhcloud.com/bg2_40123232/taskbacd 上下ABCD網誌位置: http://cdw2g2-40123232.rhcloud.com/bg2_40123232/taskabcd","title":"40123232 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123232-cdw11-bao-gao.html"},{"tags":"bg2","text":"啟動 cdw13 協同專案 cdw13心得","title":"40123226 cdw13 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123226-cdw13-bao-gao.html"},{"tags":"bg2","text":"啟動 cdw11 協同專案 cdw11心得 先註冊藍圖及導入 使用老師及同學提供及修改過的ABCD程式來達成此次練習 練習1:4A 直接以老師的原本程式的A來使用 修改起始坐標後來呈現 如圖 每個A距離都取等距移動 最後1個A沒取等距因為會超出畫布範圍 完成後須先在近端執行可否運作 接下來BACD及從上到下ABCD都是相似作法 成果: 4A 網誌位置: http://cdw2bg2-40123226.rhcloud.com/bg2_40123226/task4a BACD網誌位置: http://cdw2bg2-40123226.rhcloud.com/bg2_40123226/taskbacd 上下ABCD網誌位置: http://cdw2bg2-40123226.rhcloud.com/bg2_40123226/taskabcd","title":"40123226 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123226-cdw11-bao-gao.html"},{"tags":"bg2","text":"啟動 cdw13 協同專案 cdw13心得 大致修改上述座標點,X和Y軸及起始旋轉角度 成果圖","title":"40123217 cdw13 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123217-cdw13-bao-gao.html"},{"tags":"bg2","text":"啟動 cdw11 協同專案 cdw11心得 先註冊藍圖及導入 使用老師及同學提供及修改過的ABCD程式來達成此次練習 練習1:4A 直接以老師的原本程式的A來使用 修改起始坐標後來呈現 如圖 每個A距離都取等距移動 最後1個A沒取等距因為會超出畫布範圍 完成後須先在近端執行可否運作 接下來BACD及從上到下ABCD都是相似作法 成果: 4A 網誌位置: http://cdw2bg2-40123226.rhcloud.com/bg2_40123226/task4a BACD網誌位置: http://cdw2bg2-40123226.rhcloud.com/bg2_40123226/taskbacd 上下ABCD網誌位置: http://cdw2bg2-40123226.rhcloud.com/bg2_40123226/taskabcd","title":"40123217 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123217-cdw11-bao-gao.html"},{"tags":"bg2","text":"啟動 cdw13 協同專案 cdw13心得 大致修改上述座標點,X和Y軸及起始旋轉角度 成果圖","title":"40123214 cdw13 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123214-cdw13-bao-gao.html"},{"tags":"bg2","text":"啟動 cdw11 協同專案 cdw11心得 先註冊藍圖及導入 使用老師及同學提供及修改過的ABCD程式來達成此次練習 練習1:4A 直接以老師的原本程式的A來使用 修改起始坐標後來呈現 如圖 每個A距離都取等距移動 最後1個A沒取等距因為會超出畫布範圍 完成後須先在近端執行可否運作 接下來BACD及從上到下ABCD都是相似作法 成果: 4A 網誌位置: http://cdw11bg240123214-40123214.rhcloud.com/bg2_40123214/task4a BACD網誌位置: http://cdw11bg240123214-40123214.rhcloud.com/bg2_40123214/taskbacd 上下ABCD網誌位置: http://cdw11bg240123214-40123214.rhcloud.com/bg2_40123214/taskabcd","title":"40123214 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123214-cdw11-bao-gao.html"},{"tags":"bg2","text":"啟動 cdw14 協同專案 cdw14心得 這次是由老師給的\"三個正齒輪嚙合\"程式進行修改。 一開始的齒數是寫死的，因此我只將齒輪增加成四個。 加入n4、pr4、spur(cx多加了pr4、改成n3)，也更改畫布大小。 後來老師重新上傳可以更改參數的版本，一樣是改成四個齒輪。 關於囓合部分，因為加了第四個齒輪上去，也就是n1->n2->n3->n4之間，有齒數比，因此囓合的角度則可以從這之中發現關係。","title":"40123202 cdw14 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123202-cdw14-bao-gao.html"},{"tags":"bg2","text":"啟動 cdw13 協同專案 cdw13心得 此次是將整個鏈條旋轉90度，呈現的樣子變成垂直。 將老師給的程式修改first_degree部分，增加90度，讓第一個鏈條起始角度旋轉90度， 以及將一開始鎖死的X、Y值刪去，轉而加在startx、starty裡面， 最後移動中心位置，不然旋轉完90度後，畫面會吃掉部分鏈條。 成果圖","title":"40123202 cdw13 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123202-cdw13-bao-gao.html"},{"tags":"bg2","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40123202 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123202-cdw11-bao-gao.html"},{"tags":"bg11","text":"cdw13 編輯","title":"40323252 cdw13報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323252-cdw13bao-gao.html"},{"tags":"bg11","text":"cdw11 新增畫布 在@clean myflaskapp.py 與 myflaskapp declarations 下，新增自己畫布名稱 將第11週的程式碼裡面的ag100修改為自己組的名稱 完成18.30齒鍊條 弄好要看的時候要檢查衝突 第2個作業 將橫的鏈條改成垂直 利用上一個程式碼將first_degree加上90度 共有4個 鍊條垂直圖 將近端localhost移至遠端Openshift 3個齒輪的嚙合 運用3個齒輪的程式碼 我們希望讓它變成4個齒輪 新增齒輪N4 4個齒輪的嚙合 心得: 設定畫布的時候常出現衝突必須從DOS上看哪裡錯誤然後去修改或是覆蓋，再次檢查是否沒有衝突了，接下來的鏈條先要用solvespace畫出來然後去求點求角度以及第一齒要從哪裡開始放，然後最後一齒要讓他往下自然垂下來的地方我沒有完成，期中過後的這些齒輪鍊條不管是2D3D，我認為對未來設計一下東西或是運用在專題都是有益的，修改程式碼就可以馬上在近端網頁看到，慢慢去變化.調整到我們需要的零件或是組合的一些細節，都可以用這方式很快得去調整也比較輕鬆便利，onshape上的3D圖，模擬也讓我們比較簡單去了解一些細部的東西","title":"40323252 期末報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323252-qi-mo-bao-gao.html"},{"tags":"bg11","text":"cdw13 內容規畫 : 本周作業為，將老師提供之鍊條，旋轉90度呈現站立狀態。 完成圖: 參考老師上課網址 http://chiamingyen.github.io/kmolab/blog/zi-xing-che-chuan-dong-2d-lian-tiao-hui-tu-er.html 至solvespace繪製下圖鍊條 根據上述的切點座標與相關角度條件, 就可以利用 自行車傳動 2D 鏈條繪圖 中的鏈條繪圖元件進行下列繪圖: 要將此鍊條旋轉90度站立起來的話，只要在程式中first_degree的地方加上90，並根據在solvespace繪製之座標，在p、k的地方更改座標。 心得 本周作業是將老師給的水平鍊條，更改為垂直的鏈條，首先是在solvespace繪圖軟體上畫出想要的圖形，在小視窗裡有著各點的座標，再將程式裡各座標進行更改，並在鍊條角度處加上90度，即可完成本週作業。","title":"40323245 cdw13報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323245-cdw13bao-gao.html"},{"tags":"bg11","text":"cdw12內容規畫 : 12345","title":"40323245 cdw12報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323245-cdw12bao-gao.html"},{"tags":"bg11","text":"cdw11內容規畫 : 參考老師上課網址 http://chiamingyen.github.io/kmolab/blog/zi-xing-che-chuan-dong-2d-lian-tiao-hui-tu.html 再利用 html canvas 完成的 2D 自行車鏈條繪圖: 左側鏈輪齒數為 18, 右側鏈輪齒數為 30. 再利用老師提供之程式碼，貼至Leo上，並將程式裡之ag100改成自己的組別(bg11)。 畫布設定 在@clean myflaskapp.py 與 myflaskapp declarations 下，新增自己畫布名稱。 完成所有設定後，在系統管理員處輸入python wsgi.py，在近端測試，並可檢查是否有錯誤。 心得 第一週的課程比較簡單一點，照著老師給的程式複製貼上到Leo上，在藍圖與畫布設定上出了點問題，在沒有檢查的情況下，就急著把檔案推上班上的github，造成了全班的不便，之後了解可以利用python wsgi.py來檢查是否有錯誤，再推上github。","title":"40323245 cdw11報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323245-cdw11bao-gao.html"},{"tags":"bg101","text":"啟動 cdw12 協同專案 啟動 cdw12 協同專案","title":"40323299 cdw12 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323299-cdw12-bao-gao.html"},{"tags":"bg10","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40328245 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40328245-cdw11-bao-gao.html"},{"tags":"bg10","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40328242 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40328242-cdw11-bao-gao.html"},{"tags":"bg1","text":"從別人已經立直好鍊條的程式碼複製貼上，只要尋找 twocircle 函式複製即可 在近端測試看看，執行 python wsgi.py ，接著以瀏覽器輸入網址 localhost:5000/bg1_40123156_2/twocircle ，若是看到鍊條已立直則代表成功，接著再推回遠端倉儲 心得：原本自己不斷嘗試把鍊條立直，但是一直沒辦法成功，最後沒辦法只能 copy 別人的，自己在慢慢研究程式碼了。","title":"40123156 2D鍊條立直","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123156-2dlian-tiao-li-zhi.html"},{"tags":"bg1","text":"到 Github 尋找 cdw11 倉儲並且 git clone 在近端進到路徑 /users/a/g100/cdw13 複製路徑下的 a40123100.py 檔案，貼上至 cdw11/users/b/g1/ ，重新命名為 bg1_40123156_2.py 用 Replace 功能將檔案裡的 ag100 的字元取代為 bg1_40123156_2 修改根目錄下的 myflaskapp.py 檔案 插入 import users.b.g1.bg1_40123156_2 與 app.register_blueprint(users.b.g1.bg1_40123156_2.bg1_40123156_2) 這兩行程式碼 在近端測試看看，執行 python wsgi.py ，接著以瀏覽器輸入網址 localhost:5000/bg1_40123156_2/twocircle ，若是看到同下圖則代表成功，接著再推回遠端倉儲 心得：創造2D鍊條不算太難，但是要注意許多小地方，像是 myflaskapp.py 要記得改，還有路徑有沒有打錯，最後就是要在近端測試看看，如果近端測試沒問題才能推送。","title":"40123156 創造2D鍊條","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123156-chuang-zao-2dlian-tiao.html"},{"tags":"bg1","text":"啟動 cdw12 協同專案 上傳測試以及嘗試解決衝突","title":"40123144 cdw12 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123144-cdw12-bao-gao.html"},{"tags":"bg1","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40123134 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123134-cdw11-bao-gao.html"},{"tags":"bg1","text":"啟動 cdw14 協同專案 四個齒輪 步驟: 1.將老師程式碼複製下來 2.增加一個齒輪,定義n4齒數,在模數裡面新增n4齒數,以及定義pr4節圓半徑 3.要將齒輪4與其他三個齒輪囓合,當第3齒從與第4齒囓合的定位線, 逆時鐘旋轉 180-180/n3 角度後, 原先囓合的第4齒必須要再配合旋轉(180-180/n2) n2 n3/n4 心得: 原先以為多增加一個齒數並不會很複雜,但在測試的時候在把第4齒囓合起來有蠻多問題的, 像是定位問題,一開始少加了一個pr3的半徑,第4齒就會與第3齒重疊,還有在囓合完成後旋轉也有滿多問題,經過反覆測試後才用好了。","title":"40123133 網際 2D 正齒輪 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123133-wang-ji-2d-zheng-chi-lun-bao-gao.html"},{"tags":"bg1","text":"啟動 cdw13 協同專案 鍊條旋轉90度 步驟: 1.讓鍊條轉90度要將裡面的所有的first_degree加90度 2.轉完90度後,設定圖形位置,(startx , starty)、(p , k) 心得: 一開始只在first_degree輸入90度後,只有部分的鏈條有轉90度,其他的鏈條沒有跟著轉, 因此後來試了幾次,除了用手動方式來接合,後來發現用solvespace來計算位置會更快,定 位也會更精準。","title":"40123133 2D 鏈條 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123133-2d-lian-tiao-bao-gao.html"},{"tags":"bg1","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40123133 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123133-cdw11-bao-gao.html"},{"tags":"bg1","text":"啟動 cdw12 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40123131 cdw12 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123131-cdw12-bao-gao.html"},{"tags":"bg1","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40123131 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123131-cdw11-bao-gao.html"},{"tags":"bg1","text":"將水平鍊條反轉成垂直鍊條 方法: 程式的first_degree加90度使圖形垂直後，將圖形的座標定位在(0, 0)後，利用 Solvespace 可以算出座標點差距，如此就能完成了。 程式修改部分: degree 為鏈條兩圓距，這裡可以修改起始角frist_degree 與起始點(x, y)。 完成圖","title":"40123129 cdw13 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123129-cdw13-bao-gao.html"},{"tags":"bg1","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40123126 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123126-cdw11-bao-gao.html"},{"tags":"ag9","text":"啟動 cdw11 協同專案 期中報告內容: 前言:使用2D程式在LEO編輯,本周任務AAAA,BACD,及直式ABCD 任務一AAAA 任務二BACD 任務三ABCD由上到下 心得:剛開始覺得很複雜，而且很怕一不小心就會把網站弄掛掉，但是經過同學的熱心指導，終於進步了很多。 自評:68","title":"40323132 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323132-cdw11-bao-gao.html"},{"tags":"ag8","text":"啟動 cdw13 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40323154 cdw13 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323154-cdw13-bao-gao.html"},{"tags":"ag8","text":"期中報告內容: 前言 自期中後的課程進入2D鏈輪、齒輪及3D齒輪嚙合的繪製， 內容 2D 繪圖: 2D鏈輪: http://pythoncdw-40323143.rhcloud.com/ag8_40323143/twocircle 先在solvespace劃出兩個圓及其外公切線，算出圓切線及外公切線的夾角，然後用程式計算出其切點座標，然後用for迴圈將其鏈結會出來。 2D齒輪嚙合: http://pythoncdw-40323143.rhcloud.com/ag8_40323143/gear 2D齒輪嚙合主要是藉由將齒輪輪參數輸入老師寫好的齒輪繪圖程式，然後指定以各齒輪的pr為變數的齒輪生成位置，最後在設定每個齒輪與前面的齒輪的角度關係，劃出個齒輪的齒輪嚙合圖。 個齒輪位置及角度關係 3D 齒輪嚙合: https://cad.onshape.com/documents/ea1b4146750171b8d5980d78/w/bf2fb7ac158020c39327c4ab/e/abcdef53f62afc1cf2d37902 進入Onshape 點選上方的+ 選擇要引入的齒輪程式 輸入齒輪參數 劃出齒輪，並劃出一個底座 建立組合圖並組合完成 點選上方的齒輪配合，加進兩個旋轉設定配合，並設定齒數比 到齒輪的零件圖去設定各齒輪嚙合需要旋轉的角度 完成 心得: 經過了一整個學期，協同產品設計的課程也接近尾聲，我在這門課學到了許多，卻也有許多沒學成。學到的是關於協同的思想架構，心中也有些關於協同管理待驗證的想法，而沒學成的是實際上配合電腦去實踐這些想法架構的手段，空有想法卻沒有方法也不知道應該怎麼找方法，感覺真是矛盾，對此實在很慚愧。","title":"40323143 cdw11 期末報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323143-cdw11-qi-mo-bao-gao.html"},{"tags":"ag8","text":"期中報告內容: 前言 期中報告 任務描述 畫出 4a badc abcd 協同規劃 任務執行說明 cdw11_4a.png:先把1個A畫出來，然後複製程式並改變X座標，每加一個A其X座標就+60，最畫出4個A。 cdw11_badc.png: cdw11_abcd.png;: 結果說明 cdw11_4a.png: http://cdw11-40323143.rhcloud.... cdw11_badc.png: cdw11_abcd.png;: 結論與討論 最後只有把4A的圖畫出來 pelican 網誌位置: http://cdw11-2014w11.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform","title":"40323143 cdw11 期中報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323143-cdw11-qi-zhong-bao-gao.html"},{"tags":"ag8","text":"期中報告內容: 前言 期中報告 任務描述 畫出 4a badc abcd 協同規劃 任務執行說明 cdw11_4a.png:先把1個A畫出來，每加一個A其X座標就+60，最畫出4個A。 cdw11_badc.png: cdw11_abcd.png;: 結果說明 cdw11_4a.png: http://cdw11-40323143.rhcloud.... cdw11_badc.png: cdw11_abcd.png;: 結論與討論 最後只有把4A的圖畫出來，因太晚做，cdw2的wsgi.py已經沒有了，借組員43顯示。 pelican 網誌位置: http://cdw11-2014w11.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform","title":"40323137 cdw11 期中報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323137-cdw11-qi-zhong-bao-gao.html"},{"tags":"ag8","text":"啟動 cdw17 協同專案 期末報告內容: 前言: 完成網際2D鏈條組立、2D齒輪囓合及Onshape的3D齒輪囓合 任務描述及執行說明: 任務一(2D鏈條): (左18齒右30齒) 轉90度(上30下18) 下圖為對鏈條程式碼的一些參數說明 下圖為對(上30下18齒)的鏈條程式參數的說明，參數設定完成之後，再用for迴圈下去執行 2D齒輪囓合 要先將原本導入的資料庫，換成下圖的資料庫位置 Onshape 3D齒輪 這邊可以先計算兩齒輪囓合的中心距離， 那如果要做斜的嚙合的話，要先加上旋轉的角度， 先將起始位置決定好，再來要偏轉一個齒的角度 齒輪的特徵可以從裏頭進行呼叫，在下圖紅色框框處 在底下收尋spur，底下有齒輪的圖案 下圖是對齒輪的參數設定，當中的偏轉角是囓合的關鍵!! 再來是對齒輪進行組立並囓合，要先選取兩齒輪的軸心 ，再來要去算齒數比，兩兩進行囓合 下圖是完成圖 心得: 期末做的作業，鍊條跟齒輪，感覺上都還算是蠻有趣的，首先鏈條的組立， 要先去用solvespace畫出並推算出鏈條的四個接點，再來用sympy幫忙算出點的座標， 然後再用for迴圈下去跑，就可以完成了。 齒輪方面，首先要先導入資料庫，然後再去跑齒輪的程式，當中我們將齒數、節圓半徑、壓力角拉出來當作變數，其中有畫一條齒輪的基準線是要用來做兩齒輪囓合的時候使用，當然3D方面也是用相同原理進行 囓合，先將兩條基準線接在一起之後，我們會發現兩齒式接在一起的，再來要偏轉一個齒的角度，才可以進行囓合。 3D齒輪方面，由於Onshape上的Featurescript裡頭有內建的齒輪程式，所以我們只需要輸入齒輪的參數，就可以直接生成出來，但是齒數過多的話，它跑出來的齒型會有不正確的齒型，算是裡頭內建程式的錯誤，而至於囓合方面，其實就跟2D囓合原理一樣，而至於斜角的嚙合，首先要去推算出將基準線接在一起的轉角之後，再加上偏轉角，就可以進行囓合了，再來設定一下齒數比，之後試轉一下，就可以了。 pelican 網誌位置: http://cdw11-2014w11.rhcloud.com/static/","title":"40323131 cdw17 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323131-cdw17-bao-gao.html"},{"tags":"ag8","text":"啟動 cdw11 協同專案 期中報告內容: 前言: 利用2D繪圖程式繪製出4個A、BACD及ABCD 任務描述及執行說明: 任務一(繪製出四個A): 首先在下圖圈起來地方的位置註冊藍圖及導入 再來將2D繪圖程式打開，在要繪圖的資料夾底下輸入python wsgi.py執行，若在 Linux 下要用 Python3 啟動: python3 wsgi.py 若是開啟成功，會出現上圖的圖示，若是失敗的話則會出現哪裡有錯誤，這個要再去找看看是哪裡出錯。 在網頁輸入localhost:5000/下圖圈起來的位置1./位置2.，當然這個名稱是自己定的，可以任意變更 開啟之後會出現在這個位置底下的東西 再來要說明如何繪製字母A，首先可以自行繪製，也可以從老師給的參數直接拿過來使用， 接下來要說明的是如何從老師給的參數直接導入繪製出字母A、B、C及D 可以從班級cdw2中取得這些參數，再將這些參數導入，而位置cdw2中的users底下的s2a中的g100裏頭的scrum1_task1.py然後用編輯器打開來 複製a函式的參數，然後貼到自己位置的底下，記得要加上html的語法才可以跑出圖形，不然會只有文字檔而已 html語法 導入成功之後 接著再重複導入A函式，更改一下座標軸，紅色底線部分為座標軸的參數 導入四次A函式之後，及用座標軸調整之間的距離 完成! 任務二(依序排列BACD): 根據上面導入A函式的方法，只是換成導入B、C及D函式而已 只是需要注意到的地方是導入的B函式的參數要更動一下 更動位置如下圖 原本函式在圈起來的地方為0+65，要改成0 改成0之後，所顯示的字母B的起始位置會在原點 之後再依序導入A、C、D函式，再調整一下座標位置 完成! 任務三(由上到下排序ABCD): 依照上面所講的方法，再導入A、B、C及D函式，調整位置就可以完成了 結果說明: 如何繪製出字母A是靠a函式裏頭的很多X、Y軸的參數，經過數學的運算，才會顯示出字母A的形狀，可是我們直接用導入的可能會無法理解裏頭的X、Y的參數更改的話，到底是影響到甚麼地方，這個是我們可以去思考的地方。 其實除了用到座標軸參數去排列以外，也可以去更改它的鍊條顏色，只要在下圖的地方改成你要的顏色就可以了。 結論與討論: 基本上熟悉了之後，知道要去修改哪邊的參數，才會變成想要的結果，還有出問題的時候大概要去哪裡找問題，差不多都有了一些頭緒，只是有些地方可能比較麻煩，可是大致上還ok。 pelican 網誌位置: http://cdw11-2014w11.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform","title":"40323131 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323131-cdw11-bao-gao.html"},{"tags":"ag8","text":"前言: 在設定上的問題會以及Onshape的設定會有許多問題，要一一仔細的檢查，不然就無法讓齒輪旋轉。 利用2D軟體進行輔助，進行圖解，讓我們可以算出他的切線的角度，以及該連接的角度 2D鏈輪設計 先用圖解法算出切線和圓心大小，以利程式設計 程式碼: def realcircle(x, y): # 20 為鏈條兩圓距 # chain 所圍之圓圈半徑為 20/2/math.asin(degree*math.pi/180/2) # degree = math.asin(20/2/radius)*180/math.pi x = 50 y = 0 degree = 12 # 78, 66, 54, 42, 30, 18, 6度 #必須有某些 chain 算座標但是不 render first_degree = 90 - degree repeat = 360 / degree # 第1節也是 virtual chain outstring = ''' mychain = chain() x1, y1 = mychain.basic_rot('''+str(x)+\",\"+str(y)+\", \"+str(first_degree)+''', True) #x1, y1 = mychain.basic_rot('''+str(x)+\",\"+str(y)+\", \"+str(first_degree)+''') ''' # 這裡要上下各多留一節虛擬 chain, 以便最後進行連接 (x7, y7) 與 (x22, y22) for i in range(2, int(repeat)+1): #if i < 7 or i > 23: if i <= 3 or i >= 22: # virautl chain outstring += \"x\"+str(i)+\", y\"+str(i)+\"=mychain.basic_rot(x\"+str(i-1)+\", y\"+str(i-1)+\", 90-\"+str(i*degree)+\",True) \\n\" #outstring += \"x\"+str(i)+\", y\"+str(i)+\"=mychain.basic_rot(x\"+str(i-1)+\", y\"+str(i-1)+\", 90-\"+str(i*degree)+\") \\n\" else: outstring += \"x\"+str(i)+\", y\"+str(i)+\"=mychain.basic_rot(x\"+str(i-1)+\", y\"+str(i-1)+\", 90-\"+str(i*degree)+\") \\n\" p = -150 k = 0 degree = 20 # 70, 50, 30, 10 # 從 i=5 開始, 就是 virautl chain first_degree = 90 - degree repeat = 360 / degree # 第1節不是 virtual chain outstring += ''' #mychain = chain() p1, k1 = mychain.basic_rot('''+str(p)+\",\"+str(k)+\", \"+str(first_degree)+''') ''' for i in range(2, int(repeat)+1): if i >= 7 and i <= 15: # virautl chain outstring += \"p\"+str(i)+\", k\"+str(i)+\"=mychain.basic_rot(p\"+str(i-1)+\", k\"+str(i-1)+\", 90-\"+str(i*degree)+\", True) \\n\" #outstring += \"p\"+str(i)+\", k\"+str(i)+\"=mychain.basic_rot(p\"+str(i-1)+\", k\"+str(i-1)+\", 90-\"+str(i*degree)+\") \\n\" else: outstring += \"p\"+str(i)+\", k\"+str(i)+\"=mychain.basic_rot(p\"+str(i-1)+\", k\"+str(i-1)+\", 90-\"+str(i*degree)+\") \\n\" s = -97 t = 124.5 degree = 12 # 70, 50, 30, 10 # 從 i=5 開始, 就是 virautl chain first_degree = 90 - degree repeat = 360 / degree # 第1節不是 virtual chain outstring += ''' #mychain = chain() s1, t1 = mychain.basic_rot('''+str(s)+\",\"+str(t)+\", \"+str(first_degree)+''',True) #x1, y1 = mychain.basic_rot('''+str(x)+\",\"+str(y)+\", \"+str(first_degree)+''') ''' for i in range(2, int(repeat)+1): if i <= 18 or i >= 26: # virautl chain outstring += \"s\"+str(i)+\", t\"+str(i)+\"=mychain.basic_rot(s\"+str(i-1)+\", t\"+str(i-1)+\", 90-\"+str(i*degree)+\",True) \\n\" else: outstring += \"s\"+str(i)+\", t\"+str(i)+\"=mychain.basic_rot(s\"+str(i-1)+\", t\"+str(i-1)+\", 90-\"+str(i*degree)+\") \\n\" a = -180 b = 101 degree = 5 # 70, 50, 30, 10 # 從 i=5 開始, 就是 virautl chain first_degree = 90 - degree repeat = 360 / degree # 第1節不是 virtual chain outstring += ''' #mychain = chain() a1, b1 = mychain.basic_rot('''+str(a)+\",\"+str(b)+\", \"+str(first_degree)+''',True) ''' for i in range(2, int(repeat)+1): if i <= 47 or i >= 65: # virautl chain outstring += \"a\"+str(i)+\", b\"+str(i)+\"=mychain.basic_rot(a\"+str(i-1)+\", b\"+str(i-1)+\", 90-\"+str(i*degree)+\",True) \\n\" #outstring += \"x\"+str(i)+\", y\"+str(i)+\"=mychain.basic_rot(x\"+str(i-1)+\", y\"+str(i-1)+\", 90-\"+str(i*degree)+\") \\n\" else: outstring += \"a\"+str(i)+\", b\"+str(i)+\"=mychain.basic_rot(a\"+str(i-1)+\", b\"+str(i-1)+\", 90-\"+str(i*degree)+\") \\n\" return outstring 實際狀況 一般切線設計 垂直轉90度後的狀況 2D平面齒輪設計，先用位置繪畫，然後計算他所在的位置 繪畫出齒型 def gear(): outstring = ''' snap window.onload=function(){ brython(1); } # 將 導入的 document 設為 doc 主要原因在於與舊程式碼相容 from browser import document as doc # 由於 Python3 與 Javascript 程式碼已經不再混用, 因此來自 Javascript 的變數, 必須居中透過 window 物件轉換 from browser import window # 針對 Javascript 既有的物件, 則必須透過 JSConstructor 轉換 from javascript import JSConstructor import math # 主要用來取得畫布大小 canvas = doc[\"gear1\"] # 此程式採用 Cango Javascript 程式庫繪圖, 因此無需 ctx #ctx = canvas.getContext(\"2d\") # 針對類別的轉換, 將 Cango.js 中的 Cango 物件轉為 Python cango 物件 cango = JSConstructor(window.Cango) # 針對變數的轉換, shapeDefs 在 Cango 中資料型別為變數, 可以透過 window 轉換 shapedefs = window.shapeDefs # 目前 Cango 結合 Animation 在 Brython 尚無法運作, 此刻只能繪製靜態圖形 # in CangoAnimation.js #interpolate1 = window.interpolate # Cobi 與 createGearTooth 都是 Cango Javascript 程式庫中的物件 cobj = JSConstructor(window.Cobj) creategeartooth = JSConstructor(window.createGearTooth) # 經由 Cango 轉換成 Brython 的 cango, 指定將圖畫在 id=\"plotarea\" 的 canvas 上 cgo = cango(\"gear1\") ###################################### # 畫正齒輪輪廓 ##################################### def spur(cx, cy, m, n, pa, theta): # n 為齒數 #n = 17 # pa 為壓力角 #pa = 25 # m 為模數, 根據畫布的寬度, 計算適合的模數大小 # Module = mm of pitch diameter per tooth #m = 0.8*canvas.width/n # pr 為節圓半徑 pr = n*m/2 # gear Pitch radius # generate gear data = creategeartooth(m, n, pa) # Brython 程式中的 print 會將資料印在 Browser 的 console 區 #print(data) gearTooth = cobj(data, \"SHAPE\", { \"fillColor\":\"#ddd0dd\", \"border\": True, \"strokeColor\": \"#606060\" }) #gearTooth.rotate(180/n) # rotate gear 1/2 tooth to mesh, 請注意 rotate 角度為 degree # theta 為角度 gearTooth.rotate(theta) # 單齒的齒形資料經過旋轉後, 將資料複製到 gear 物件中 gear = gearTooth.dup() # gear 為單一齒的輪廓資料 #cgo.render(gearTooth) # 利用單齒輪廓旋轉, 產生整個正齒輪外形 for i in range(1, n): # 將 gearTooth 中的資料複製到 newTooth newTooth = gearTooth.dup() # 配合迴圈, newTooth 的齒形資料進行旋轉, 然後利用 appendPath 方法, 將資料併入 gear newTooth.rotate(360*i/n) # appendPath 為 Cango 程式庫中的方法, 第二個變數為 True, 表示要刪除最前頭的 Move to SVG Path 標註符號 gear.appendPath(newTooth, True) # trim move command = True # 建立軸孔 # add axle hole, hr 為 hole radius hr = 0.6*pr # diameter of gear shaft shaft = cobj(shapedefs.circle(hr), \"PATH\") shaft.revWinding() gear.appendPath(shaft) # retain the 'moveTo' command for shaft sub path gear.translate(cx, cy) # render 繪出靜態正齒輪輪廓 cgo.render(gear) # 接著繪製齒輪的基準線 deg = math.pi/180 Line = cobj(['M', cx, cy, 'L', cx+pr*math.cos(theta*deg), cy+pr*math.sin(theta*deg)], \"PATH\", { 'strokeColor':'blue', 'lineWidth': 1}) cgo.render(Line) # 3個齒輪的齒數 n1 = 17 n2 = 29 n3 = 15 n4 = 40 n5 = 20 # m 為模數, 根據畫布的寬度, 計算適合的模數大小 # Module = mm of pitch diameter per tooth # 利用 80% 的畫布寬度進行繪圖 # 計算模數的對應尺寸 m = canvas.width*0.8/(n1+n2+n3) # 根據齒數與模組計算各齒輪的節圓半徑 pr1 = n1*m/2 pr2 = n2*m/2 pr3 = n3*m/2 pr4 = n4*m/2 pr5 = n5*m/2 # 畫布左右兩側都保留畫布寬度的 10% # 依此計算對應的最左邊齒輪的軸心座標 cx = canvas.width*0.1+pr1 cy = canvas.height/2 # pa 為壓力角 pa = 25 # 畫最左邊齒輪, 定位線旋轉角為 0, 軸心座標 (cx, cy) spur(cx, cy, m, n1, pa, 0) # 第2個齒輪將原始的定位線逆時鐘轉 180 度後, 與第1個齒輪正好齒頂與齒頂對齊 # 只要第2個齒輪再逆時鐘或順時鐘轉動半齒的角度, 即可完成囓合 # 每一個齒分別包括從齒根到齒頂的範圍, 涵蓋角度為 360/n, 因此所謂的半齒角度為 180/n spur(cx+pr1+pr2, cy, m, n2, pa, 180-180/n2) # 第2齒與第3齒的囓合, 首先假定第2齒的定位線在 theta 角為 0 的原始位置 # 如此, 第3齒只要逆時鐘旋轉 180 度後, 再逆時鐘或順時鐘轉動半齒的角度, 即可與第2齒囓合 # 但是第2齒為了與第一齒囓合時, 已經從原始定位線轉了 180-180/n2 度 # 而當第2齒從與第3齒囓合的定位線, 逆時鐘旋轉 180-180/n2 角度後, 原先囓合的第3齒必須要再配合旋轉 (180-180/n2 )*n2/n3 spur(cx+pr1+pr2+pr2+pr3, cy, m, n3, pa, 180-180/n3+(180-180/n2)*n2/n3) spur(cx+pr1+pr2+pr2+2*pr3+pr4,cy,m,n4,pa,180-180/n4+(180-180/n3)*n3/n4) spur(cx+pr1+pr2+pr2+2*pr3+pr4+pr5,cy,m,n5,pa,180-180/n5+(180-180/n3)*n4/n5) ''' return outstring 實際狀況 Onshape 3D 齒輪設計 先導入齒輪的Feacture script 然後定義兩個齒輪 ※注意模數和齒輪圓的大小，以及偏移的角度 設計一個齒輪座 最後進行組裝和模擬轉動 心得: 時代的演進，讓機械業也進入了協同的世界，雖然在電機和資工比起來，進入的時間真的算很慢了，不過也因為機械業是最龐大的產業，光是零組件就不知道可以比電機的零件多多少了，在這學期Onshape的出現，真的是翻轉了機械產業在SolidWork中的比例，未來不一定要靠安裝軟體才能使用3D軟體，現在應該已經有了在所有平台上面都可以畫出cad而不是被公司綁住買一些自己不需要的軟體，未來功能可能就是朝向付費取向，以及訂閱制，而不是買斷產品了。","title":"40323123 cdw11 期末報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323123-cdw11-qi-mo-bao-gao.html"},{"tags":"ag8","text":"前言: 在使用github和openshift串流中，和使用設定，有許多的問題和設定上需要注意的地方，例如註冊帳號使用設定，要用到利用和值得設定，像藍圖註冊的帳號就是需要去想像，因此在未來設定上需要多加注意。 任務描述: 任務一:繪畫 AAAA 任務二:繪畫 DABC 任務三:繪畫直的ABCD 協同規劃: 自行繪畫 任務執行說明: 1.將自行繪畫的ABCD座標分開，就會有四種樣式，再利用組合邏輯的方式將座標軸放進去。 2.先畫A，然後定座標軸在(-310, -250, 500, 500) ，然後給rot(-65, 100, 90) 3.以此類推在 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option AAAA: http://cdw11-40323123.rhcloud.com/ag8_40323123/task1_23 DACB : http://cdw11-40323123.rhcloud.com/ag8_40323123/task1_25 直的ABCD http://cdw11-40323123.rhcloud.com/ag8_40323123/task1_26 結果說明: 藉著設定好的座標軸和涵式來撰寫程式，會是比較輕鬆的方法，不必要每個都自己一一的從畫才是比較好的做法 結論與討論: 基本上熟悉了之後，知道要去修改哪邊的參數，才會變成想要的結果，未來可能一切都參數化設計，輸入相對的字母就會有相對應的字跑出來，是未來努力的目標。 pelican 網誌位置: http://cdw11-2014w11.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform","title":"40323123 cdw11 期中報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323123-cdw11-qi-zhong-bao-gao.html"},{"tags":"ag7","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40123227 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123227-cdw11-bao-gao.html"},{"tags":"ag7","text":"啟動 cdw14 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 在CDW14 完成2D齒輪組合繪圖: 任務心得: 這禮拜利用2D齒輪組合成一齒輪組，而藉由調整參數來進行控制。 如調整齒輪組中心點位置、齒輪的模數大小、齒輪齒數等，便能達到利用不同齒輪組合而成之齒輪組。 此外。 spur(cx-118, cy, m, n, pa) spur(cx, cy, m, 11, pa) spur(cx+80, cy, m, 13, pa) 這幾行指令為控制齒輪的中心位置。 n = 25 這行指令為控制齒輪的齒數。 m = 0.8*canvas.width/n/4 這行指令為控制齒輪的模數，並根據畫布的寬度, 計算適合的模數大小。","title":"40123149 cdw14 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123149-cdw14-bao-gao.html"},{"tags":"ag1","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40123145 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123145-cdw11-bao-gao.html"},{"tags":"ag4","text":"啟動 cdw11 協同專案 期中報告內容: 前言:使用2D程式在LEO編輯,本周任務AAAA,BACD,及直式ABCD 任務一AAAA 註冊位置及匯入藍圖(如圖) 完成後進入倉儲輸入指令wsgi.py 成功啟動http://127.0.0.1:5000/ 反之註冊失敗或程式有錯或顯示失敗無法開啟http://localhost:5000/ 後開起瀏覽器 輸入http://localhost:5000/檔案名稱/圖名 如圖 圖名內容(AAAA)使用之前期中已經畫好的ABCD程式去做參數式的更改畫圖 已經將ABCD程式分別 建檔 只需叫出程式去編輯即可 導入HTML語法能在網路上顯示出來 複製A圖檔程式 在複製A圖 程式畫圖的部分 複製四個A 因為位置不同 須改座標點 Y軸不分跟別改為60,120,180 即可完成 完成後無誤推上github 再推上openshift去顯示做作品 任務二BACD 用同樣做法去做參數是繪圖即可完成 任務三ABCD由上到下 用同樣做法去做參數是繪圖即可完成 如老師說的 推至OpenShift即可完成作業交代 所有協同內容衝突請直接在 github 倉儲中解決, OpenShift 對應平台僅用來執行本倉儲的最新程式版本 結果說明: 裡面程式相當複雜，一開始沒有很用心去研究，而我又不是組長所以沒有很用心去研究，只好跳出來好好研究程式，研究程式在做什麼，研究到想不透時就去詢問40323131張元旭同學，問了蠻多地方的，要謝謝他的教導，到一定階段後發現其中的一些原理都差不多，後來越來越上手，有學習和了解該得如何去做參數式作圖的。 。 pelican 網誌位置: http://cdw11-2014w11.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform","title":"40323138 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323138-cdw11-bao-gao.html"},{"tags":"ag4","text":"啟動 cdw11 協同專案 期中報告內容: 前言:使用2D程式在LEO編輯,本周任務AAAA,BACD,及直式ABCD 任務一AAAA 註冊位置及匯入藍圖(如圖) 完成後進入倉儲輸入指令wsgi.py 成功啟動http://127.0.0.1:5000/ 反之註冊失敗或程式有錯或顯示失敗無法開啟http://localhost:5000/ 後開起瀏覽器 輸入http://localhost:5000/檔案名稱/圖名 如圖 圖名內容(AAAA)使用之前期中已經畫好的ABCD程式去做參數式的更改畫圖 已經將ABCD程式分別 建檔 只需叫出程式去編輯即可 導入HTML語法能在網路上顯示出來 複製A圖檔程式 在複製A圖 程式畫圖的部分 複製四個A 因為位置不同 須改座標點 Y軸不分跟別改為60,120,180 即可完成 完成後無誤推上github 再推上openshift去顯示做作品 任務二BACD 用同樣做法去做參數是繪圖即可完成 任務三ABCD由上到下 用同樣做法去做參數是繪圖即可完成 如老師說的 推至OpenShift即可完成作業交代 所有協同內容衝突請直接在 github 倉儲中解決, OpenShift 對應平台僅用來執行本倉儲的最新程式版本 結果說明: 裡面程式相當複雜，一開始沒有很用心去研究，而我又不是組長所以沒有很用心去研究，只好跳出來好好研究程式，研究程式在做什麼，研究到想不透時就去詢問40323131張元旭同學，問了蠻多地方的，要謝謝他的教導，到一定階段後發現其中的一些原理都差不多，後來越來越上手，有學習和了解該得如何去做參數式作圖的。 。 pelican 網誌位置: http://cdw11-2014w11.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform","title":"40323109 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323109-cdw11-bao-gao.html"},{"tags":"ag3","text":"啟動 cdw13 協同專案","title":"40323108 cdw13 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323108-cdw13-bao-gao.html"},{"tags":"ag3","text":"期中報告內容: 前言:使用2D程式在LEO編輯,本周任務AAAA,BACD,及直式ABCD 任務一AAAA 任務二BACD 用同樣做法去做參數是繪圖即可完成 任務三 ABCD由上到下 用同樣做法去做參數是繪圖即可完成 心得:這次的第11週作業,一開始老師就要我們完成3個任務,大部分的人都不太知道要從哪裡開始,而我也是,之後去詢問郭鐙元同學,他交了我一些基本的概念,因為要協同,大家一起推一個東西一起修改一個東西,每一步驟都很重要,也怕推壞或把倉儲弄掛,之後陸續還有幾週作業,希望能把環境再了解的更熟悉一點. 自評分數:65 pelican 網誌位置: http://cdw11-2014w11.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform","title":"40323108 cdw11 期中報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323108-cdw11-qi-zhong-bao-gao.html"},{"tags":"ag2","text":"期末報告 報告內容: 前言: 利用2D繪圖程式繪製出4個A、BACD及ABCD 任務描述及執行說明: 任務一(繪製出四個A): 首先在下圖圈起來地方的位置註冊藍圖及導入 再來將2D繪圖程式打開，在要繪圖的資料夾底下輸入python wsgi.py執行 若是開啟成功，會出現上圖的圖示，若是失敗的話則會出現哪裡有錯誤，這個要再去找看看是哪裡出錯。 在網頁輸入localhost:5000/下圖圈起來的位置1./位置2. 開啟之後會出現在這個位置底下的東西 再來要說明如何繪製字母A，首先可以自行繪製，也可以從老師給的參數直接拿過來使用， 接下來要說明的是如何從老師給的參數直接導入繪製出字母A、B、C及D 可以從班級cdw2中取得這些參數，再將這些參數導入，而位置cdw2中的users底下的s2a中的g100裏頭的scrum1_task1.py然後用編輯器打開來 複製a函式的參數，然後貼到自己位置的底下，記得要加上html的語法才可以跑出圖形，不然會只有文字檔而已 html語法 導入成功之後 接著再重複導入A函式，更改一下座標軸，紅色底線部分為座標軸的參數 導入四次A函式之後，及用座標軸調整之間的距離 完成! 任務二(依序排列BACD): 根據上面導入A函式的方法，只是換成導入B、C及D函式而已 只是需要注意到的地方是導入的B函式的參數要更動一下 更動位置如下圖 原本函式在圈起來的地方為0+65，要改成0 改成0之後，所顯示的字母B的起始位置會在原點 之後再依序導入A、C、D函式，再調整一下座標位置 完成! 任務三(由上到下排序ABCD): 依照上面所講的方法，再導入A、B、C及D函式，調整位置就可以完成了 結果說明: 如何繪製出字母A是靠a函式裏頭的很多X、Y軸的參數，經過數學的運算，才會顯示出字母A的形狀，可是我們直接用導入的可能會無法理解裏頭的X、Y的參數更改的話，到底是影響到甚麼地方，這個是我們可以去思考的地方。 其實除了用到座標軸參數去排列以外，也可以去更改它的鍊條顏色，只要在下圖的地方改成你要的顏色就可以了。 : 基本上了解之後，至少知道修改哪邊的參數，會變成甚麼結果，還有出問題的時候大概要去從哪邊著手修改，但有些地方可能比較麻煩，還是需要23號同學的幫忙。 pelican 網誌位置: http://cdw11-2014w11.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform","title":"40323120 cdw11 期末報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323120-cdw11-qi-mo-bao-gao.html"},{"tags":"ag1_402231530","text":"啟動 cdw13 協同專案 啟動 cdw13 協同專案","title":"40323199 cdw13 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323199-cdw13-bao-gao.html"},{"tags":"ag1_402231530","text":"啟動 cdw11 協同專案 pelican 網誌位置: http:ag1_4022315311-ag100.rhcloud.com/static/ 分組程式: httag1_40223153dw11-ag100.rhcloud.com/option fileuploadform: hag1_40223153/cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40323199 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323199-cdw11-bao-gao.html"},{"tags":"ag1_40223153","text":"啟動 cdw13 協同專案 啟動 cdw13 協同專案","title":"40223153 cdw13 報告-1","url":"http://cdw11-ag100.rhcloud.com/static/blog/40223153-cdw13-bao-gao-1.html"},{"tags":"ag1_40223153","text":"啟動 cdw11 協同專案 pelican 網誌位置: http:ag1_4022315311-ag100.rhcloud.com/static/ 分組程式: httag1_40223153dw11-ag100.rhcloud.com/option fileuploadform: hag1_40223153/cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40223153 cdw11 報告-1","url":"http://cdw11-ag100.rhcloud.com/static/blog/40223153-cdw11-bao-gao-1.html"},{"tags":"ag7","text":"啟動 cdw1 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40123149 cdw1 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40123149-cdw1-bao-gao.html"},{"tags":"ag10","text":"啟動 cdw11 協同專案 期中報告內容: 前言: 利用2D繪圖程式在LEO上繪製出4個A、BACD和直行的ABCD 任務描述及說明: 1.繪製出4個A: http://40323141cdw11-40323141.rhcloud.com/ag10_40323141/task1_41 然後先開啟leo 註冊藍圖及導入 再輸入指令wsgi.py 成功後便可打開畫布 開啟瀏覽器後輸入網址localhost:5000/後面加自己名稱 成功後4a就會顯示出來了 接著進入LEO的編輯程式 更改4A的座標 Y軸部分更改為60,120,180便完成 2.繪製出BADC: 用上面的方法做參數式繪圖即可完成 http://40323141cdw11-40323141.rhcloud.com/ag10_40323141/task2 3.繪製出直行的ABCD: 用上面的方法做參數式繪圖即可完成 http://40323141cdw11-40323141.rhcloud.com/ag10_40323141/task3 結果說明: 前面沒有仔細去聽，就會覺得程式很複雜，但後來問了同學之後發現有些地方都很類似，找到他的規則之後就會簡單一些，雖然還是得花很多時間，多用幾次之後就會越來越上手了。 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform","title":"40323141 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323141-cdw11-bao-gao.html"},{"tags":"ag10","text":"啟動 cdw11 協同專案 期中報告內容: 前言: 利用2D繪圖程式在LEO上繪製出4個A、BACD和直行的ABCD 任務描述及說明: 任務一 繪製出4個A: 一開始先註冊藍圖及導入，如下圖 然後輸入指令python wsgi.py 如果成功會出現下圖，成功後即可打開畫布 然後在網頁輸入localhost:5000/後面打自己圖的圖名，名稱可以隨意取，但是改完之後再網址後面也要跟著更改 開啟後可以看到如下圖地顯示出的4個A，可以看到上面圈起來的網址 然後複製A函式的參數，貼到edit ag10_40323139.py底下，在最下方要加上html的語法才會顯示圖形。 html語法 成功之後，複製A圖檔程式 再重複導入A圖檔程式，更改一下X的座標軸，如下圖圈圈所示 X位置0 X座標改完後，將4個A圖檔存檔後檢查網站有無4個A 完成任務一(4個A) 任務二 (BACD) 用上述方法將其餘3個A改成BCD，然後即可到網站上檢查 這裡在網站上只需要把localhost:5000/後面改成任務二的圖名，如下圖說明 完成任務二(BACD) 任務三(由直行排ABCD): 如上面任務一和任務二，不過這次改的是Y軸的部分，我使用110、10、-65、-200 任務三完成(直行ABCD) 結果說明: 這些鍊條組成的英文字母ABCD都是靠參數式一個一個去打成的，利用XY軸去寫這些鍊條的位置、角度，或是將鍊條固定在一個地方，也可以將其改成自己想要的顏色。 結論與討論: 一開始因為覺得非常複雜所以就會畏懼它不去學它，後來再經過同學的教導下，慢慢學到許多知識，慢慢地自己也可以來試著試試看，後來就越來越習慣這些該如何去做、如何去改，也讓我學到了許多。 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform","title":"40323139 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323139-cdw11-bao-gao.html"},{"tags":"ag10","text":"啟動 cdw11 協同專案 期中報告內容: 前言: 任務描述及執行說明: 結果說明: 結論與討論: pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","title":"40323129 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323129-cdw11-bao-gao.html"},{"tags":"ag1","text":"Leo架構部分 1.如圖所示 2.建立畫布 3.註冊 齒輪及鍊條部分 1.繪出2D齒輪 http://cdw13-40323105.rhcloud.com/a40323105/ag1_2D 2.繪出3D嚙合齒輪 先打spur gear讓齒輪指令產生 出現SG圖示 在工具列顯示SG 第一個 ---同齒 : 齒數為25齒,模數為1 https://cad.onshape.com/documents/3c6654b66598ba5c8b705139/w/5a56bdaca9b01b12352faf0e/e/e7fd6e1ededed6c80a075f86 第二個 --- 不同齒 : 一個為25齒,一個為35齒 https://cad.onshape.com/documents/3c6654b66598ba5c8b705139/w/5a56bdaca9b01b12352faf0e/e/58c7aa53c24011e473149e43 Tooth angle 必須要調整,不然在嚙合時會發生干涉 第三個 --- 四齒嚙合 將齒數設定為10齒,20齒,25齒,35齒~ https://cad.onshape.com/documents/86fd9d81eea4d1b5476e2c0a/w/edfaeb51623e755ef318f199/e/573651dde4d2729de24f0e8b 設定完齒數後組裝 組裝完之後要調整tooth angle ,並調整轉向就OK了 鍊條繪製 心得： 這次要繪出鍊條2D以及齒輪的2D.3D,而齒輪的2D我先複製老師的程式碼, 每個齒輪中間都繪有一條橫線,顏色為blue,寬度為1,而我將線條的顏色改為red,寬度為5。在齒輪3D的部分,首先先用同齒的下去弄，好了之後再用不同齒的嚙合，兩者皆完成之後再畫出2齒以上嚙合，但是不知道為甚麼當我齒3嚙合齒4的時候好像有錯誤,目前還在解決中,我發現當我在設定齒數的時候,模數也會跟著變,且在組合的時候,tooth angle也是要設定的,不然會干涉,轉速比也要調整。 不僅是齒輪,現在因為兩班一起弄一個倉儲,所以有時候近端開不起來,而我通常都是在班級倉儲裡面做的.所以這時候就會很麻煩,也讓我知道了要自己建一個屬於自己的倉儲會比較安全。 另外在做報告的時候,顯示了utf-8的警告,一開始是沒有的,後來出現了,我那時就在想是不是我修改到別人的md檔,之後我再重新clone後,就OK了,所以我想應該是這個原因 自評：75","title":"40323105 期末報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323105-qi-mo-bao-gao.html"},{"tags":"ag1","text":"cdw11任務 1.繪出AAAA 2.繪出BADC 3.繪出直的ABCD 步驟: 1.先git clone cdw11資料夾,創建一個ag1_40323105的py檔,裡面打指定字母 2.在myflaskapp和myflaskapp declarations註冊 3.開始在ag1_40323105.py檔繪圖 4.將畫完的圖傳到openshift,首先先用puttygen創建一把鑰匙,然後再新增一個倉儲,將cdw11的網址貼上,後面打master 5.打上網址,就可以看到自己畫的圖了 6.確認完之後git push上去就可以了 ====================== AAAA: http://cdw110504-40323105.rhcloud.com/ag1_40323105/a BADC: http://cdw110504-40323105.rhcloud.com/ag1_40323105/b ABCD: http://cdw110504-40323105.rhcloud.com/ag1_40323105/C 心得: 首先要產生畫布就很不容易了,之後還要一個一個找點來畫,重複多次之後終於將ABCD都畫完了,覺得畫完之後成就感頗高,但是因為現在倉儲同時多人在做,所以常常會有衝突的問題,因此除了要會畫圖之外,還必須學習如何解決衝突... ============= pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform","title":"40323105 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323105-cdw11-bao-gao.html"},{"tags":"ag1","text":"cdw11任務 1.繪出AAAA 2.繪出BADC 3.繪出直的ABCD 步驟: 1.先git clone cdw11資料夾,創建一個ag1_40323105的py檔,裡面打指定字母 2.在myflaskapp和myflaskapp declarations註冊 3.開始在ag1_40323105.py檔繪圖 4.將畫完的圖傳到openshift,首先先用puttygen創建一把鑰匙,然後再新增一個倉儲,將cdw11的網址貼上,後面打master 5.打上網址,就可以看到自己畫的圖了 6.確認完之後git push上去就可以了 ====================== AAAA: http://cdw110504-40323105.rhcloud.com/ag1_40323105/a BADC: http://cdw110504-40323105.rhcloud.com/ag1_40323105/b ABCD: http://cdw110504-40323105.rhcloud.com/ag1_40323105/C 心得: 首先要產生畫布就很不容易了,之後還要一個一個找點來畫,重複多次之後終於將ABCD都畫完了,覺得畫完之後成就感頗高,但是因為現在倉儲同時多人在做,所以常常會有衝突的問題,因此除了要會畫圖之外,還必須學習如何解決衝突..... ============= pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform","title":"40323105  cdw11  期中報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40323105-cdw11-qi-zhong-bao-gao.html"},{"tags":"ag1","text":"繪出2D齒輪 不同齒輪 畫出齒輪 T=30 畫出齒輪 T=25 接合不同齒輪:因齒數不同，所以比例30/25 同齒輪 畫出齒輪 T=30 接合同齒輪:因為相同齒數比30/30 四個不同齒輪配合 畫出齒輪 T=30 第一我先畫出齒數=30，模數=2，齒厚=25 第二我在畫出齒數=25，模數=2，齒厚=25 我在第一齒與第二齒做配合 第三我先畫出齒數=40，模數=2，齒厚=25 我在第二齒與第三齒做配合 第四我先畫出齒數=20，模數=2，齒厚=25 我在第三齒與第四齒做配合 就完成不同齒輪的結合 心得: 這次是我轉學以來都不熟悉得一堂課程，但是我也學習到很多東西，像是Leo、python等等撰寫程式語言的軟體，也學到Onshape這個線上繪圖軟體，第一它可以跟很多人一起畫圖、組合等等功能，也不用存檔因為他是雲端繪圖軟體，更可以不用花任何費用就可使用的繪圖軟體，在未來協同產品的開發不單單只是在自己的電腦去畫圖，而是去跟世界的接軌，來完成產品的開發。","title":"40223153 期末報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40223153-qi-mo-bao-gao.html"},{"tags":"ag1","text":"啟動 cdw11 協同專案 pelican 網誌位置: 分組程式: fileuploadformg1ag1_40223153/cdw11-ag100.rhcloud.com/fileug1ag1_40223153/cdw11-ag100.rhcloud.com/fileuploadform imageuploadg1f=ag1_40223153://cdw11-ag100.rhcloud.com/img1m\"ag1_40223153://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖g1 <img ag1_40223153http://cdw11-ag100.rhcloud.com/images/cdw11_4a.png\" widtg1","title":"40223153 cdw11 報告","url":"http://cdw11-ag100.rhcloud.com/static/blog/40223153-cdw11-bao-gao.html"}]};